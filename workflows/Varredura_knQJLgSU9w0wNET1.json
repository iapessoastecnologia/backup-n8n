{"createdAt":"2025-10-09T19:57:22.751Z","id":"knQJLgSU9w0wNET1","name":"Varredura","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"id_pasta","type":"any"}]}},"type":"[REDACTED]","typeVersion":1.1,"position":[0,0],"id":"de83aa32-e9e0-4874-aef0-4391b27c7f1b","name":"When Executed by Another Workflow"},{"parameters":{"url":"https://www.googleapis.com/drive/v3/files","authentication":"[REDACTED]","sendQuery":true,"specifyQuery":"json","jsonQuery":"={\n    \"q\": \"'{{ $json.id_pasta }}' in parents and trashed = false\",\n    \"fields\": \"files(id, name, mimeType, parents, createdTime, modifiedTime), nextPageToken\",\n    \"spaces\": \"drive\",\n    \"pageSize\": 100,  \n    \"pageToken\": \"{{ $json.nextPageToken || '' }}\"\n}","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[208,0],"id":"5f0443be-1f32-4adb-90d5-251779bbb850","name":"HTTP Request","onError":"[REDACTED]"},{"parameters":{"jsCode":"// Cria um array para acumular todos os arquivos encontrados\nconst allFiles = [];\n\n// Itera sobre todos os itens de entrada (cada pasta processada)\nfor (const item of $input.all()) {\n  const files = item.json.files || [];\n  const id_pasta = item.json.id_pasta || item.json.id || null;\n  const nextPageToken = item.json.nextPageToken || null;\n\n  // Se não houver arquivos, apenas pula\n  if (!Array.isArray(files) || files.length === 0) continue;\n\n  // Adiciona cada arquivo encontrado com informações úteis\n  for (const f of files) {\n    allFiles.push({\n      json: {\n        id_arquivo: f.id,\n        nome_arquivo: f.name,\n        id_pasta,\n        mimeType: f.mimeType,\n        createdTime: f.createdTime,\n        modifiedTime: f.modifiedTime,\n        nextPageToken\n      }\n    });\n  }\n}\n\n// Retorna tudo que encontrou\nif (allFiles.length === 0) {\n  return [{ json: { mensagem: 'Nenhum arquivo encontrado' } }];\n}\n\nreturn allFiles;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[416,0],"id":"aefa4a7e-5303-40ff-a241-d3c18f7431cc","name":"Code in JavaScript"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"97dc5eca-c689-432c-a1d1-7f7cf30c5e44","leftValue":"={{ $json.nextPageToken }}","rightValue":"","operator":{"type":"string","operation":"notExists","singleValue":true}},{"id":"1c2918b9-a52f-45fc-97dc-26176e13c233","leftValue":"={{ $json.mimeType }}","rightValue":"application/vnd.google-apps.folder","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[624,0],"id":"94d58a87-701e-4dd8-863d-cbda5ec7bde3","name":"If"},{"parameters":{"batchSize":20,"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[832,80],"id":"4c7c330b-eef5-45da-a1d2-26821b63dbaf","name":"Loop Over Items"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1040,0],"id":"49113e90-dd0c-41ee-ba94-8e2f195a6b59","name":"Merge"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"HTTP Request","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Merge","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Merge","type":"main","index":1}],[{"node":"HTTP Request","type":"main","index":0}]]}}}