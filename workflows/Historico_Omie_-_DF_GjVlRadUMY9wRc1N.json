{"createdAt":"2025-09-16T12:45:52.157Z","id":"GjVlRadUMY9wRc1N","name":"Historico Omie - DF","active":true,"isArchived":false,"nodes":[{"parameters":{"amount":3},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[800,-80],"id":"b465358f-b563-407c-8c9d-2c5162199394","name":"Tempo de espera","webhookId":"67385d61-7b55-406e-8220-db0eb81b8752"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[384,-96],"id":"3f76b31d-ff13-4cc2-9b2c-b77aae4ddc70","name":"Loop Ler Pag"},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-112,-96],"id":"2b2d590b-61fd-4f53-af40-9441dba383a1","name":"BuscarTotalPaginas","alwaysOutputData":true,"retryOnFail":true},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[608,-80],"id":"17dbb05a-03b0-4c48-bfbf-59b5df727cfa","name":"ContasReceber","alwaysOutputData":true,"retryOnFail":true},{"parameters":{"jsCode":"// Pega o total de páginas do nó anterior (troque pelo nome real do nó se for diferente)\nconst totalPaginas = $items(\"BuscarTotalPaginas\", 0)[0].json.total_de_paginas;\n\n// Define quantas últimas páginas você quer processar\nconst ultimasPaginas = 22;\n\n// Garante que o valor mínimo da primeira página seja 1\nconst primeiraPagina = Math.max(1, totalPaginas - ultimasPaginas + 1);\n\n// Gera os itens para as últimas páginas\nconst items = [];\n\nfor (let i = primeiraPagina; i <= totalPaginas; i++) {\n  items.push({ json: { pagina: i } });\n}\n\nreturn items;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[128,-96],"id":"386c0370-f1a0-419f-a2fe-e2e18ae96d5d","name":"GerarUltimasPaginas"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1088,-96],"id":"48537322-6294-44db-97e7-3302e1d961be","name":"MergeContas"},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Contatos Omie","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"Página1","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[1648,-96],"id":"40fc7a39-bd98-4aaa-831b-9886cb77941e","name":"PlanilhaNomes2"},{"parameters":{"jsCode":"return [{ json: {} }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1456,-96],"id":"ce760f33-976f-468d-ae0d-3834489efdff","name":"Zerando Item2"},{"parameters":{"jsCode":"return items.flatMap(item => {\n  const norm = (s) => String(s || \"\")\n    .normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\") // tira acentos\n    .toUpperCase().replace(/\\s+/g, \" \").trim();      // caixa alta + espaços\n\n  const dados = (item.json.conta_receber_cadastro || [])\n    .filter(lanc => {\n      const st = norm(lanc.status_titulo);\n      return st === \"ATRASADO\";\n    });\n\n  const hoje = new Date().toLocaleDateString('pt-BR');\n\n  return dados.map(lanc => {\n    const cnpj = lanc.cnpj_cpf || \"\";\n    const venc = lanc.data_vencimento || \"\";\n    const valor = lanc.valor_documento || 0;\n\n    return {\n      json: {\n        Cliente: lanc.nome_cliente || \"Não informado\",\n        CNPJ_CPF: cnpj,\n        DataVencimento: venc,\n        Categoria: lanc.categoria || lanc.codigo_categoria || \"\",\n        Valor: valor,\n        codigo_cliente_fornecedor: lanc.codigo_cliente_fornecedor || null,\n        DataCaptura: hoje,\n        ChaveUnica: `${cnpj}-${venc}-${valor}-${hoje}`\n      }\n    };\n  });\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1280,-96],"id":"b1518b88-5c6e-4401-a763-40b1bb86a0dd","name":"Normalizar","executeOnce":false,"alwaysOutputData":false,"retryOnFail":true},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-112,192],"id":"af718122-eb4b-43cd-a108-6b4cebc2faf7","name":"BuscarTotalPaginas1","alwaysOutputData":true,"retryOnFail":true},{"parameters":{"jsCode":"// Extrai todas as categorias retornadas\nconst categorias = items.map(item => item.json.categoria_cadastro || []).flat();\n\n// Cria mapa código -> descrição\nconst mapa = {};\nfor (const c of categorias) {\n  mapa[c.codigo] = c.descricao;\n}\n\nreturn [{ json: { mapaCategorias: mapa } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[528,192],"id":"99a7211f-5ab6-4097-9907-42fdcd27eced","name":"Code in JavaScript"},{"parameters":{"mode":"combine","advanced":true,"mergeByFields":{"values":[{"field1":"codigo_cliente_omie","field2":"codigo_cliente_fornecedor"}]},"options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1904,-80],"id":"216bf019-3ea1-4625-8d15-2e82365b96c6","name":"Merge1"},{"parameters":{"jsCode":"// Pega o objeto que tem o mapaCategorias\nconst mapaItem = items.find(i => i.json.mapaCategorias);\nconst mapaCategorias = mapaItem ? mapaItem.json.mapaCategorias : {};\n\n// Pega apenas os lançamentos (aqueles que têm codigo_cliente_omie)\nconst lancamentos = items.filter(i => i.json.codigo_cliente_omie).map(i => i.json);\n\n// Substitui Categoria pelo nome\nconst resultado = lancamentos.map(l => {\n  const codigo = l.Categoria;\n  const nome = mapaCategorias[codigo] || l.Categoria || \"Categoria não encontrada\";\n\n  return {\n    json: {\n      ...l,\n      Categoria: nome\n    }\n  };\n});\n\nreturn resultado;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2448,160],"id":"64494115-cb86-41f2-b681-7c04a148517c","name":"Code in JavaScript1"},{"parameters":{"numberInputs":3},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[2016,144],"id":"b9cb87d8-362a-4df3-ad51-6a90a1536960","name":"Merge2"},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"FINANCEIRO - CRM DE COBRANÇAS ","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":111807862,"mode":"list","cachedResultName":"CRM COBRANÇA","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.7,"position":[1456,48],"id":"55b4b369-f546-46d4-a3ec-db4ce4d0620c","name":"Get row(s) in sheet"},{"parameters":{"jsCode":"// Itens novos vindos do fluxo\nconst novos = items.filter(i => i.json).map(i => i.json);\n\n// Itens já existentes na planilha\nconst existentes = $items(\"Get row(s) in sheet\", 0).map(i => i.json);\n\n// Função para gerar chave única (ignorando Responsável)\nconst makeKey = (r) =>\n  `${r.CNPJ_CPF || ''}-${r.DataVencimento || ''}-${r.Valor || ''}-${r.DataCaptura || ''}`;\n\n// Monta índice inicial com os registros existentes\nconst indexExistentes = {};\nfor (const r of existentes) {\n  const key = makeKey(r);\n  if (!indexExistentes[key]) indexExistentes[key] = [];\n  indexExistentes[key].push(r);\n}\n\nconst resultado = [];\n\nfor (const n of novos) {\n  const key = makeKey(n);\n  const grupo = indexExistentes[key] || [];\n\n  const temCom = grupo.some(r => r.Responsavel && r.Responsavel.trim() !== \"\");\n  const temSem = grupo.some(r => !r.Responsavel || r.Responsavel.trim() === \"\");\n\n  // Se já existir esse mesmo registro (mesma chave + mesmo responsável) → pula\n  if (grupo.some(r =>\n    (r.Responsavel || \"\") === (n.Responsavel || \"\")\n  )) {\n    continue;\n  }\n\n  // Se veio com responsável mas não existe sem → cria cópia sem responsável\n  if (n.Responsavel && n.Responsavel.trim() !== \"\") {\n    if (!temSem) {\n      const copia = { ...n, Responsavel: \"\" };\n      resultado.push({ json: copia });\n      // Atualiza índice\n      indexExistentes[key] = [...grupo, copia];\n    }\n  }\n\n  // Se já tem com e sem → não adiciona mais\n  if (temCom && temSem) continue;\n\n  // Se chegou até aqui, adiciona o item novo\n  resultado.push({ json: n });\n  indexExistentes[key] = [...(indexExistentes[key] || []), n];\n}\n\nreturn resultado;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2240,160],"id":"098e0533-b6c6-4076-bc9d-ff6c84e668ac","name":"Code in JavaScript2"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"FINANCEIRO - CRM DE COBRANÇAS ","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":111807862,"mode":"list","cachedResultName":"CRM COBRANÇA","cachedResultUrl":"[REDACTED]"},"columns":{"mappingMode":"defineBelow","value":{"Cliente ou Fornecedor (Razão Social)":"={{ $json.nome }}","CNPJ/CPF":"={{ $json.cnpj_cpf }}","Data de Vencimento (completa)":"={{ $json.DataVencimento }}","A Pagar ou Receber":"={{ $json.Valor }}","Categoria":"={{ $json.Categoria }}","DataCaptura":"={{ $json.DataCaptura }}"},"matchingColumns":["DataCaptura"],"schema":[{"id":"Cliente ou Fornecedor (Razão Social)","displayName":"Cliente ou Fornecedor (Razão Social)","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"CNPJ/CPF","displayName":"CNPJ/CPF","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Data de Vencimento (completa)","displayName":"Data de Vencimento (completa)","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Responsável","displayName":"Responsável","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"A Pagar ou Receber","displayName":"A Pagar ou Receber","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Categoria","displayName":"Categoria","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"Data de cobrança","displayName":"Data de cobrança","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Retorno do Cliente","displayName":"Retorno do Cliente","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Data para contato","displayName":"Data para contato","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Status Final","displayName":"Status Final","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"Cliente Ativo","displayName":"Cliente Ativo","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":true},{"id":"DataCaptura","displayName":"DataCaptura","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true,"removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.7,"position":[2656,160],"id":"794bf8ee-4500-44b1-a5bd-cb7f35903e90","name":"Append or update row in sheet"},{"parameters":{"rule":{"interval":[{"triggerAtHour":10}]}},"type":"n8n-nodes-base.scheduleTrigger","typeVersion":1.2,"position":[-464,48],"id":"a8bb35de-316a-481e-b6bb-65b2aa2e5f74","name":"Schedule Trigger"}],"connections":{"Tempo de espera":{"main":[[{"node":"Loop Ler Pag","type":"main","index":0}]]},"Loop Ler Pag":{"main":[[{"node":"MergeContas","type":"main","index":0}],[{"node":"ContasReceber","type":"main","index":0}]]},"BuscarTotalPaginas":{"main":[[{"node":"GerarUltimasPaginas","type":"main","index":0}]]},"ContasReceber":{"main":[[{"node":"Tempo de espera","type":"main","index":0}]]},"GerarUltimasPaginas":{"main":[[{"node":"Loop Ler Pag","type":"main","index":0}]]},"PlanilhaNomes2":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"Zerando Item2":{"main":[[{"node":"PlanilhaNomes2","type":"main","index":0}]]},"MergeContas":{"main":[[{"node":"Normalizar","type":"main","index":0}]]},"Normalizar":{"main":[[{"node":"Zerando Item2","type":"main","index":0},{"node":"Merge1","type":"main","index":1}]]},"BuscarTotalPaginas1":{"main":[[{"node":"Code in JavaScript","type":"main","index":0}]]},"Code in JavaScript":{"main":[[{"node":"Merge2","type":"main","index":2}]]},"Merge1":{"main":[[{"node":"Merge2","type":"main","index":0}]]},"Merge2":{"main":[[{"node":"Code in JavaScript2","type":"main","index":0}]]},"Code in JavaScript1":{"main":[[{"node":"Append or update row in sheet","type":"main","index":0}]]},"Get row(s) in sheet":{"main":[[{"node":"Merge2","type":"main","index":1}]]},"Code in JavaScript2":{"main":[[{"node":"Code in JavaScript1","type":"main","index":0}]]},"Schedule Trigger":{"main":[[{"node":"BuscarTotalPaginas","type":"main","index":0},{"node":"BuscarTotalPaginas1","type":"main","index":0},{"node":"Get row(s) in sheet","type":"main","index":0}]]}}}