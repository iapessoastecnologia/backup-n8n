{"createdAt":"2025-10-17T12:52:07.351Z","id":"odygzj5LBXVyThLs","name":"Envio Atrasados","active":false,"isArchived":false,"nodes":[{"parameters":{"amount":3},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[-448,144],"id":"8f7224a9-128f-43f1-926e-962f0ab96ad7","name":"Tempo de espera","webhookId":"67385d61-7b55-406e-8220-db0eb81b8752"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-912,16],"id":"a5404aef-b397-415d-ba9a-aae145076976","name":"Loop Ler Pag"},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1296,16],"id":"6bd3505a-9150-452e-8b16-5f7c6c1276ee","name":"BuscarTotalPaginas","alwaysOutputData":true,"retryOnFail":true},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"contentType":"raw","rawContentType":"application/json","body":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-672,96],"id":"c06f09fe-8d63-4b34-8b05-33562cc25e19","name":"ContasReceber","alwaysOutputData":true,"retryOnFail":true},{"parameters":{"jsCode":"// Pega o total de p√°ginas do n√≥ anterior (troque pelo nome real do n√≥ se for diferente)\nconst totalPaginas = $items(\"BuscarTotalPaginas\", 0)[0].json.total_de_paginas;\n\n// Define quantas √∫ltimas p√°ginas voc√™ quer processar\nconst ultimasPaginas = 11;\n\n// Garante que o valor m√≠nimo da primeira p√°gina seja 1\nconst primeiraPagina = Math.max(1, totalPaginas - ultimasPaginas + 1);\n\n// Gera os itens para as √∫ltimas p√°ginas\nconst items = [];\n\nfor (let i = primeiraPagina; i <= totalPaginas; i++) {\n  items.push({ json: { pagina: i } });\n}\n\nreturn items;\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1120,16],"id":"b69e69d8-8718-4bc4-bd1c-d93ddaa9317a","name":"GerarUltimasPaginas"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[-304,16],"id":"8e4826fc-0764-4454-8072-bf8df67922df","name":"MergeContas"},{"parameters":{},"type":"n8n-nodes-base.manualTrigger","typeVersion":1,"position":[-1552,16],"id":"e6175833-bda3-4383-9297-6178b17f7bc9","name":"When clicking ‚ÄòExecute workflow‚Äô"},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Contatos Omie","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[432,-416],"id":"582714c9-6130-42d5-9cda-b8ad06eb7ddd","name":"PlanilhaNomes2"},{"parameters":{"jsCode":"// 1Ô∏è‚É£ Pega os dados do node \"FiltroVencer\"\nconst dadosFiltro = $items(\"FiltroVencer\", 0).map(item => item.json);\n\n// 2Ô∏è‚É£ Cria um mapa com c√≥digo_cliente_fornecedor ‚Üí { valorTotal, dataVencimento }\nconst mapaClientes = {};\n\nfor (const d of dadosFiltro) {\n  const codigo = d.codigo_cliente_fornecedor;\n  if (!codigo) continue;\n\n  // Valor principal\n  const valor =\n    d.categorias?.[0]?.valor ??\n    d.valor_documento ??\n    0;\n\n  // Data de vencimento do t√≠tulo\n  const vencimento = d.data_vencimento || d.data_previsao || null;\n\n  if (!mapaClientes[codigo]) {\n    // Primeiro t√≠tulo do cliente\n    mapaClientes[codigo] = {\n      valorTotal: valor,\n      dataVencimento: vencimento,\n    };\n  } else {\n    // Se j√° existe, soma o valor\n    mapaClientes[codigo].valorTotal += valor;\n\n    // Atualiza a data de vencimento (pega a mais recente)\n    const atual = mapaClientes[codigo].dataVencimento;\n    if (vencimento && (!atual || new Date(vencimento.split('/').reverse().join('-')) > new Date(atual.split('/').reverse().join('-')))) {\n      mapaClientes[codigo].dataVencimento = vencimento;\n    }\n  }\n}\n\n// 3Ô∏è‚É£ Filtra apenas os clientes da planilha que existem no mapa\n//     e adiciona os campos \"valor\" e \"vencimento\"\nreturn items\n  .filter(item => mapaClientes.hasOwnProperty(item.json.codigo_cliente_omie))\n  .map(item => ({\n    json: {\n      ...item.json,\n      valor: mapaClientes[item.json.codigo_cliente_omie].valorTotal ?? 0,\n      vencimento: mapaClientes[item.json.codigo_cliente_omie].dataVencimento ?? null,\n    },\n  }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[736,-416],"id":"8df62130-0740-456b-966a-89532e9fb189","name":"Clientes2"},{"parameters":{"jsCode":"return [{ json: {} }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[224,-416],"id":"284cf3a1-fcc2-40d1-8e55-e2f4a600de7b","name":"Zerando Item2"},{"parameters":{"jsCode":"return items.map(item => {\n  const nome = item.json.nome || 'Cliente';\n  const valor = item.json.valor\n    ? parseFloat(item.json.valor).toFixed(2).replace('.', ',')\n    : '0,00';\n  const vencimento = item.json.vencimento || '15/10/2025';\n\n  // ---- telefone formatado ----\n  let telefone = item.json.telefone1 || item.json.telefone2 || '';\n  telefone = telefone.toString().replace(/\\D/g, '').replace(/\\s+/g, '');\n  if (telefone && !telefone.startsWith('55')) telefone = `55${telefone}`;\n\n  // ---- nova mensagem no formato solicitado ----\n  const mensagem =\n`*Mariana:* Bom dia, tudo bem?\nVerificamos que o boleto com vencimento em *${vencimento}* ainda consta em aberto em nosso sistema.\n\nüí∞ *Valor:* R$ ${valor}\n\nPor gentileza, pode efetuar o pagamento na data de hoje?\n\nüí° Ser√° poss√≠vel realizar o pagamento via *PIX*.\nSegue abaixo a chave para pagamento:\n\nüè¶ *Chave PIX (CNPJ):* 17.063.340/0001-64\n\nAgradecemos pela aten√ß√£o!\n*Financeiro ‚Äì Castelo Branco Contabilidade Avan√ßada Ltda.*`;\n\n  return {\n    json: {\n      telefone: telefone,\n      mensagem: mensagem\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1088,-416],"id":"3a470ba9-757e-45f8-bcc6-805dfc36c5f6","name":"Mensagem Atrasado"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[1424,-432],"id":"de434f89-8075-4acd-8007-d4e716f8b4b0","name":"Loop Over Items"},{"parameters":{"amount":10},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1760,-416],"id":"214df575-d6f3-4839-84fd-55f764b4e177","name":"Wait3","webhookId":"35732a36-53f9-4363-b0f3-6a4430104193"},{"parameters":{"resource":"messages-api","instanceName":"Financeiro","remoteJid":"={{$json[\"telefone\"]}}","messageText":"={{$json[\"mensagem\"]}}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1600,-416],"id":"dd0b00ed-2900-4c06-ad74-350cb7c46de1","name":"Evolution API1","onError":"[REDACTED]"},{"parameters":{"jsCode":"[REDACTED]"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[0,-416],"id":"5e7c389b-de48-4839-9c4a-8ded692648ec","name":"FiltroVencer","executeOnce":false,"alwaysOutputData":false,"retryOnFail":true},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[272,16],"id":"3d3323fa-06cd-4e40-8157-e3191e9a7284","name":"Loop Over Items7"},{"parameters":{"amount":3.5},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1376,112],"id":"4212787a-bc01-4a90-b453-5fdd69f3e90b","name":"Wait7","webhookId":"d8c60c36-6959-4acf-ab90-96589b27617f"},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Contatos Omie","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[672,368],"id":"0c0938c5-a263-4891-af4e-e972f14a5b5c","name":"PlanilhaNomes5"},{"parameters":{"jsCode":"// 1Ô∏è‚É£ Recebe os c√≥digos v√°lidos da etapa anterior (filtro do Omie)\nconst codigosValidos = $items(\"FiltroVencer1\", 0).map(item => item.json.codigo_cliente_fornecedor);\n\n// 2Ô∏è‚É£ Filtra os dados da planilha atual (entrada desse Function)\nreturn items.filter(item =>\n  codigosValidos.includes(item.json.codigo_cliente_omie)\n);\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1504,368],"id":"30a0a6e9-6df1-43a0-8610-0126b6eedfbd","name":"Clientes5"},{"parameters":{"mode":"combine","advanced":true,"mergeByFields":{"values":[{"field1":"codigo_cliente_fornecedor","field2":"codigo_cliente_omie"}]},"joinMode":"keepEverything","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1728,192],"id":"e25c2cfe-0929-402a-b169-003c2f505b93","name":"Merge2"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      codigo_cliente_fornecedor: item.json.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: item.json.codigo_lancamento_omie,\n      valor: item.json.valor_documento,\n      vencimento: item.json.data_vencimento,\n      parcela: item.json.parcela,\n      // ... passe tudo que precisa junto\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[448,112],"id":"765c9afb-024a-4e31-a0d9-7a2def9ca95a","name":"Code"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  const boletoData = item.json;\n  const codigoData = $items(\"Code\")[index].json; // ajuste o nome do n√≥ aqui\n\n  return {\n    json: {\n      codigo_cliente_fornecedor: codigoData.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: codigoData.codigo_lancamento_omie,\n      valor: codigoData.valor,\n      vencimento: codigoData.vencimento,\n      parcela: codigoData.parcela,\n      // Dados do boleto\n      cLinkBoleto: boletoData.cLinkBoleto,\n      codBarras: boletoData.cCodBarras,\n      cCodStatus: boletoData.cCodStatus,\n      cDesStatus: boletoData.cDesStatus,\n      // outros campos do boleto, se quiser\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[768,112],"id":"e086eb09-db93-4f1b-86f6-1eed88cfe36c","name":"Code9"},{"parameters":{"jsCode":"return [{ json: {} }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[272,368],"id":"2f9def76-d787-4e52-a520-cf7a942647a9","name":"Zerando Item5"},{"parameters":{"jsCode":"// Sempre for√ßa existir apenas item.binary.data\nconst desiredBinaryKey = 'data';\n\nreturn items.map((item) => {\n  const j = item.json || {};\n  const b = item.binary || {};\n\n  // ---- campos b√°sicos do seu input ----\n  const codigoCliente = j.codigo_cliente_fornecedor ?? null;\n  const codigoLanc    = j.codigo_lancamento_omie != null ? String(j.codigo_lancamento_omie) : '';\n  const vencimento    = j.vencimento || 'data n√£o informada';\n  const parcela       = j.parcela || '';\n  const codBarras     = j.cCodBarras || j.codBarras || 'c√≥digo n√£o dispon√≠vel';\n\n  // valor -> formata√ß√£o pt-BR\n  let valorNum = j.valor;\n  if (typeof valorNum === 'string') {\n    valorNum = parseFloat(valorNum.replace(/\\./g, '').replace(',', '.'));\n  }\n  const valorFmt = isNaN(valorNum) ? '0,00' : valorNum.toFixed(2).replace('.', ',');\n\n  // telefone (se existir nos dados)\n  let telefone = (j.telefone || j.telefone1 || j.telefone2 || '')\n    .toString()\n    .replace(/\\D/g, '');\n  if (telefone && !telefone.startsWith('55')) telefone = `55${telefone}`;\n  const nacional = telefone.replace(/^55/, '');\n  const telefoneValido =\n    telefone && (nacional.length === 10 || nacional.length === 11) ? telefone : '';\n\n  // ---- NOVA MENSAGEM FINANCEIRA ----\n  let caption =\n    `*Mariana:*\\n` +\n    `Bom dia, tudo bem? Verificamos que o boleto com vencimento em *${vencimento}* ainda consta em aberto em nosso sistema.\\n\\n` +\n    `üí∞ *Valor:* R$ ${valorFmt}\\n` +\n    `üìÑ *C√≥digo de Barras:* ${codBarras}\\n\\n` +\n    `Por gentileza, pode efetuar o pagamento na data de hoje? ‚Äî Estamos encaminhando o boleto nesta mensagem.\\n\\n` +\n    `Agradecemos pela aten√ß√£o!\\n` +\n    `*Financeiro ‚Äì Castelo Branco Contabilidade Avan√ßada Ltda.*`;\n\n  // filename\n  let filename = 'boleto.pdf';\n  const linkBoleto = j.cLinkBoleto || '';\n  const m = (linkBoleto || '').match(/([^\\/\\?]+\\.pdf)(?:\\?|$)/i);\n  if (m) filename = m[1];\n  if (b?.file?.fileName && (!m || !m[1])) filename = b.file.fileName;\n\n  // ---- BIN√ÅRIO: for√ßa apenas binary.data ----\n  const newBinary = {};\n  if (b?.file) {\n    newBinary[desiredBinaryKey] = b.file; // vem do Extract/Download com chave 'file'\n  } else if (b && Object.keys(b).length > 0) {\n    const firstKey = Object.keys(b)[0]; // qualquer outra chave\n    newBinary[desiredBinaryKey] = b[firstKey];\n  }\n\n  // ---- JSON final (mantendo campos do input) ----\n  const out = {\n    json: {\n      codigo_cliente_fornecedor: codigoCliente,\n      codigo_lancamento_omie:    codigoLanc,\n      valor:                     j.valor,\n      vencimento:                j.vencimento,\n      parcela:                   parcela,\n\n      // extras √∫teis para o envio\n      telefone: telefoneValido,\n      caption,\n      filename,\n      url_pdf: linkBoleto || null,\n      has_pdf: !!linkBoleto || !!newBinary[desiredBinaryKey],\n\n      // mant√©m texto extra√≠do se houver\n      pdf_text: j.pdf_text || null,\n\n      // se o item vier com \"data\" em JSON, preserva sem quebrar\n      data: j.data ?? null,\n    },\n  };\n\n  if (newBinary[desiredBinaryKey]) {\n    out.binary = newBinary;\n  }\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1984,192],"id":"e190bb11-1567-4c4f-9725-9395c4496eef","name":"Mensagem para Evolution1"},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"specifyBody":"json","jsonBody":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[608,112],"id":"79543d38-e45f-49c6-8e38-4f5083879fec","name":"ObterBoleto2"},{"parameters":{"jsCode":"function isFeriado(date) {\n  // Feriados FIXOS (DD/MM)\n  const fixos = [\"01/01\",\"21/04\",\"01/05\",\"07/09\",\"12/10\",\"02/11\",\"15/11\",\"25/12\"];\n\n  // Feriados M√ìVEIS (YYYY-MM-DD)\n  const moveis = new Set([\n    // Exemplo: \"2025-02-03\", \"2025-02-04\", \"2025-04-18\"\n  ]);\n\n  const diaMes = date.toLocaleDateString('pt-BR').substring(0, 5);\n  const iso = date.toISOString().slice(0, 10);\n  return fixos.includes(diaMes) || moveis.has(iso);\n}\n\nconst isFdsOuFeriado = (d) => [0, 6].includes(d.getDay()) || isFeriado(d);\n\nfunction addDiasUteis(date, qtd) {\n  const d = new Date(date);\n  let restantes = qtd;\n  while (restantes > 0) {\n    d.setDate(d.getDate() + 1);\n    if (!isFdsOuFeriado(d)) restantes--;\n  }\n  return d;\n}\n\nconst hoje = new Date();\nconst hojeBR = hoje.toLocaleDateString('pt-BR');\n\n// T√≠tulos retornados do Omie\nconst data = items.flatMap(item => item.json.conta_receber_cadastro || []);\n\nconst filtrado = data.filter(item => {\n  if (!item?.data_vencimento || !item?.codigo_lancamento_omie) return false;\n  if ((item.status_titulo || '').toUpperCase() !== 'ATRASADO') return false;\n\n  // Converter dd/mm/yyyy -> Date\n  const [dia, mes, ano] = item.data_vencimento.split('/');\n  const vencimento = new Date(`${ano}-${mes}-${dia}T00:00:00`);\n\n  // Calcular data de envio\n  let envio;\n  if (isFdsOuFeriado(vencimento)) {\n    envio = addDiasUteis(vencimento, 2);\n  } else {\n    envio = new Date(vencimento);\n    envio.setDate(envio.getDate() + 1);\n    while (isFdsOuFeriado(envio)) {\n      envio.setDate(envio.getDate() + 1);\n    }\n  }\n\n  const envioBR = envio.toLocaleDateString('pt-BR');\n\n  // Verifica se boleto foi gerado\n  const boletoOk = (item.boleto?.cGerado?.toUpperCase() ?? 'S') === 'S';\n\n  // ‚úÖ Ajuste: incluir tamb√©m atrasados de 05/10, 10/10 e 15/10/2025\n  const vencimentosExtras = [\"05/10/2025\", \"10/10/2025\", \"15/10/2025\"];\n\n  return (hojeBR === envioBR || vencimentosExtras.includes(item.data_vencimento)) && boletoOk;\n});\n\nreturn filtrado.map(item => ({ json: item }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-64,16],"id":"a5e0fd17-8d11-49eb-baa1-32e8613618d7","name":"FiltroVencer1","executeOnce":false,"alwaysOutputData":false,"retryOnFail":true},{"parameters":{"url":"={{ $('ObterBoleto2').item.json.cLinkBoleto }}","options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"={{$json[\"filename\"] || \"boleto.pdf\"}}"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[928,112],"id":"60eca11e-3f3f-4fc2-91e6-c6ef1fae28da","name":"Baixar2"},{"parameters":{"operation":"binaryToPropery","binaryPropertyName":"boleto.pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1088,112],"id":"159e99c3-15fc-4c6f-8c4a-33a8da8d64ea","name":"Extract from File"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  // Output do Code3 (dados base)\n  const c3 = ($items(\"Code\")[index] || { json: {} }).json;\n  // Output do Code4 (onde sai o c√≥digo de barras)\n  const c4 = ($items(\"Code9\")[index] || { json: {} }).json;\n\n  const out = {\n    json: {\n      // ---- do Code3 ----\n      codigo_cliente_fornecedor: c3.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: String(c3.codigo_lancamento_omie ?? ''),\n      valor: c3.valor,\n      vencimento: c3.vencimento,\n      parcela: c3.parcela,\n\n      // ---- do item atual ----\n      data: item.json.data,\n\n      // ---- do Code4 (c√≥digo de barras) ----\n      codBarras: c4.cCodBarras ?? c4.codBarras ?? item.json.cCodBarras ?? null,\n      // se quiser manter tamb√©m com o nome original:\n      cCodBarras: c4.cCodBarras ?? item.json.cCodBarras ?? null,\n    }\n  };\n\n  // preserva o bin√°rio como binary.data, se existir\n  const b = item.binary || {};\n  const chosen =\n    b.data || b.file || (Object.keys(b).length ? b[Object.keys(b)[0]] : null);\n  if (chosen) out.binary = { data: chosen };\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1248,112],"id":"957d1896-f3b8-4375-9a3c-f9194afb017e","name":"Code10"},{"parameters":{"mode":"combine","fieldsToMatchString":"codigo_lancamento_omie","joinMode":"enrichInput1","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1504,16],"id":"d247e0f6-4a3e-4e54-98a8-c361eaa08032","name":"Boletos2"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[2256,192],"id":"cb733bea-3c14-4423-a950-cb70f4eafc67","name":"Loop Over Items8"},{"parameters":{"amount":10},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[2768,208],"id":"8eb05129-132c-4e4e-92f5-5a403d1dbe96","name":"Wait8","webhookId":"35732a36-53f9-4363-b0f3-6a4430104193"},{"parameters":{"resource":"messages-api","operation":"send-document","instanceName":"Financeiro","remoteJid":"={{ $json.telefone }}","media":"={{ $json.data }}","caption":"={{ $json.caption }}","fileName":"BOLETO CASTELO BRANCO CONTABILIDADE.pdf","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[2544,208],"id":"f14c2aee-208d-4cee-81aa-4e6d0a014302","name":"Evolution API5","onError":"[REDACTED]"}],"connections":{"Tempo de espera":{"main":[[{"node":"Loop Ler Pag","type":"main","index":0}]]},"Loop Ler Pag":{"main":[[{"node":"MergeContas","type":"main","index":0}],[{"node":"ContasReceber","type":"main","index":0}]]},"BuscarTotalPaginas":{"main":[[{"node":"GerarUltimasPaginas","type":"main","index":0}]]},"ContasReceber":{"main":[[{"node":"Tempo de espera","type":"main","index":0}]]},"GerarUltimasPaginas":{"main":[[{"node":"Loop Ler Pag","type":"main","index":0}]]},"MergeContas":{"main":[[{"node":"FiltroVencer","type":"main","index":0}]]},"When clicking ‚ÄòExecute workflow‚Äô":{"main":[[{"node":"BuscarTotalPaginas","type":"main","index":0}]]},"PlanilhaNomes2":{"main":[[{"node":"Clientes2","type":"main","index":0}]]},"Clientes2":{"main":[[{"node":"Mensagem Atrasado","type":"main","index":0}]]},"Zerando Item2":{"main":[[{"node":"PlanilhaNomes2","type":"main","index":0}]]},"Mensagem Atrasado":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[],[{"node":"Evolution API1","type":"main","index":0}]]},"Wait3":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Evolution API1":{"main":[[{"node":"Wait3","type":"main","index":0}]]},"FiltroVencer":{"main":[[{"node":"Zerando Item2","type":"main","index":0}]]},"Zerando Item5":{"main":[[{"node":"Clientes5","type":"main","index":0},{"node":"PlanilhaNomes5","type":"main","index":0}]]},"Code10":{"main":[[{"node":"Wait7","type":"main","index":0}]]},"FiltroVencer1":{"main":[[{"node":"Loop Over Items7","type":"main","index":0},{"node":"Zerando Item5","type":"main","index":0}]]},"Loop Over Items7":{"main":[[{"node":"Boletos2","type":"main","index":0}],[{"node":"Code","type":"main","index":0}]]},"Wait7":{"main":[[{"node":"Loop Over Items7","type":"main","index":0}]]},"PlanilhaNomes5":{"main":[[{"node":"Clientes5","type":"main","index":0}]]},"Clientes5":{"main":[[{"node":"Merge2","type":"main","index":1}]]},"Merge2":{"main":[[{"node":"Mensagem para Evolution1","type":"main","index":0}]]},"Code":{"main":[[{"node":"ObterBoleto2","type":"main","index":0}]]},"Code9":{"main":[[{"node":"Baixar2","type":"main","index":0}]]},"Mensagem para Evolution1":{"main":[[{"node":"Loop Over Items8","type":"main","index":0}]]},"ObterBoleto2":{"main":[[{"node":"Code9","type":"main","index":0}]]},"Baixar2":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Code10","type":"main","index":0}]]},"Boletos2":{"main":[[{"node":"Merge2","type":"main","index":0}]]},"Loop Over Items8":{"main":[[],[{"node":"Evolution API5","type":"main","index":0}]]},"Wait8":{"main":[[{"node":"Loop Over Items8","type":"main","index":0}]]},"Evolution API5":{"main":[[{"node":"Wait8","type":"main","index":0}]]}}}