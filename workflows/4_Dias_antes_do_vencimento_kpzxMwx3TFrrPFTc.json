{"createdAt":"2025-10-13T12:31:35.377Z","id":"kpzxMwx3TFrrPFTc","name":"4 Dias antes do vencimento","active":false,"isArchived":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"[REDACTED]","typeVersion":1.1,"position":[-176,0],"id":"09289fec-77a5-4e51-9d48-a0afcf29f4f3","name":"When Executed by Another Workflow"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[352,0],"id":"05ad91d0-ce02-4226-9231-b49e7f88e2c1","name":"Loop Over Items"},{"parameters":{"amount":3.5},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1456,96],"id":"5d382e1b-2886-4a8b-94cf-fffc7ba88e48","name":"Wait1","webhookId":"d8c60c36-6959-4acf-ab90-96589b27617f"},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Contatos Omie","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[752,352],"id":"925a1e62-01b2-4ed5-b5db-ad9b777e27ce","name":"PlanilhaNomes1"},{"parameters":{"jsCode":"// 1Ô∏è‚É£ Recebe os c√≥digos v√°lidos da etapa anterior (filtro do Omie)\nconst codigosValidos = $items(\"FiltroVencer4dias\", 0).map(item => item.json.codigo_cliente_fornecedor);\n\n// 2Ô∏è‚É£ Filtra os dados da planilha atual (entrada desse Function)\nreturn items.filter(item =>\n  codigosValidos.includes(item.json.codigo_cliente_omie)\n);\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1584,352],"id":"5b99c4a9-7de2-4447-99ac-37d1306b02c7","name":"Clientes1"},{"parameters":{"mode":"combine","advanced":true,"mergeByFields":{"values":[{"field1":"codigo_cliente_fornecedor","field2":"codigo_cliente_omie"}]},"joinMode":"keepEverything","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1808,176],"id":"bb5502b8-205d-43e2-b0b0-5eb4ed134bc9","name":"Merge"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      codigo_cliente_fornecedor: item.json.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: item.json.codigo_lancamento_omie,\n      valor: item.json.valor,\n      vencimento: item.json.vencimento,\n      parcela: item.json.parcela,\n      // ... passe tudo que precisa junto\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[528,96],"id":"580369ed-4a6d-4a55-8d28-de7285d79e57","name":"Code"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  const boletoData = item.json;\n  const codigoData = $items(\"Code\")[index].json; // ajuste o nome do n√≥ aqui\n\n  return {\n    json: {\n      codigo_cliente_fornecedor: codigoData.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: codigoData.codigo_lancamento_omie,\n      valor: codigoData.valor,\n      vencimento: codigoData.vencimento,\n      parcela: codigoData.parcela,\n      // Dados do boleto\n      cLinkBoleto: boletoData.cLinkBoleto,\n      codBarras: boletoData.cCodBarras,\n      cCodStatus: boletoData.cCodStatus,\n      cDesStatus: boletoData.cDesStatus,\n      // outros campos do boleto, se quiser\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[848,96],"id":"85aec8da-62f8-43fc-b56e-06eab24400ee","name":"Code5"},{"parameters":{"jsCode":"return [{ json: {} }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[352,352],"id":"5c9a9bb3-90a0-47c9-83d6-cc6438f7f85b","name":"Zerando Item1"},{"parameters":{"jsCode":"// Sempre for√ßa existir apenas item.binary.data\nconst desiredBinaryKey = 'data';\n\nreturn items.map((item) => {\n  const j = item.json || {};\n  const b = item.binary || {};\n\n  // ---- campos b√°sicos do seu input ----\n  const codigoCliente = j.codigo_cliente_fornecedor ?? null;\n  const codigoLanc    = j.codigo_lancamento_omie != null ? String(j.codigo_lancamento_omie) : '';\n  const vencimento    = j.vencimento || 'data n√£o informada';\n  const parcela       = j.parcela || '';\n  const codBarras     = j.cCodBarras || j.codBarras || 'c√≥digo n√£o dispon√≠vel';\n\n  // valor -> formata√ß√£o pt-BR\n  let valorNum = j.valor;\n  if (typeof valorNum === 'string') {\n    valorNum = parseFloat(valorNum.replace(/\\./g, '').replace(',', '.'));\n  }\n  const valorFmt = isNaN(valorNum) ? '0,00' : valorNum.toFixed(2).replace('.', ',');\n\n  // telefone (se existir nos dados)\n  let telefone = (j.telefone || j.telefone1 || j.telefone2 || '')\n    .toString()\n    .replace(/\\D/g, '');\n  if (telefone && !telefone.startsWith('55')) telefone = `55${telefone}`;\n  const nacional = telefone.replace(/^55/, '');\n  const telefoneValido =\n    telefone && (nacional.length === 10 || nacional.length === 11) ? telefone : '';\n\n  // caption\n  let caption =\n    `Ol√° *${j.nome || 'Cliente'}*,\\n\\n` +\n    `Segue seu boleto para pagamento:\\n\\n` +\n    `üí∞ *Valor:* R$ ${valorFmt}\\n` +\n    `üìÖ *Vencimento:* ${vencimento}\\n` +\n    `üìÑ *C√≥digo de Barras:* ${codBarras}\\n`;\n\n  if (j.pdf_text) caption += `\\n(Documento processado automaticamente)`;\n  caption += `\\n\\nObrigado! Qualquer d√∫vida, estamos √† disposi√ß√£o.`;\n\n  // filename\n  let filename = 'boleto.pdf';\n  const linkBoleto = j.cLinkBoleto || '';\n  const m = (linkBoleto || '').match(/([^\\/\\?]+\\.pdf)(?:\\?|$)/i);\n  if (m) filename = m[1];\n  if (b?.file?.fileName && (!m || !m[1])) filename = b.file.fileName;\n\n  // ---- BIN√ÅRIO: for√ßa apenas binary.data ----\n  const newBinary = {};\n  if (b?.file) {\n    newBinary[desiredBinaryKey] = b.file;           // vem do Extract/Download com chave 'file'\n  } else if (b && Object.keys(b).length > 0) {\n    const firstKey = Object.keys(b)[0];             // qualquer outra chave\n    newBinary[desiredBinaryKey] = b[firstKey];\n  }\n\n  // ---- JSON final (mantendo campos do input) ----\n  const out = {\n    json: {\n      codigo_cliente_fornecedor: codigoCliente,\n      codigo_lancamento_omie:    codigoLanc,\n      valor:                     j.valor,\n      vencimento:                j.vencimento,\n      parcela:                   parcela,\n\n      // extras √∫teis para o envio\n      telefone: telefoneValido,\n      caption,\n      filename,\n      url_pdf: linkBoleto || null,\n      has_pdf: !!linkBoleto || !!newBinary[desiredBinaryKey],\n\n      // mant√©m texto extra√≠do se houver\n      pdf_text: j.pdf_text || null,\n\n      // se seu item vier com \"data\" em JSON, preserva sem quebrar\n      data: j.data ?? null,\n    },\n  };\n\n  if (newBinary[desiredBinaryKey]) {\n    out.binary = newBinary;\n  }\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2080,352],"id":"6096afc6-a791-4ba0-891a-c033094f4e34","name":"Mensagem para Evolution1"},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"specifyBody":"json","jsonBody":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[688,96],"id":"c4ac9ec4-a1ad-4184-8eb2-7d010789c319","name":"ObterBoleto1"},{"parameters":{"url":"={{ $('ObterBoleto1').item.json.cLinkBoleto }}","options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"={{$json[\"filename\"] || \"boleto.pdf\"}}"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1008,96],"id":"b902f328-bb36-4202-86a7-df71e218bc09","name":"Baixar1"},{"parameters":{"operation":"binaryToPropery","binaryPropertyName":"boleto.pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1168,96],"id":"2a957577-0347-4c1a-ad77-1c5c6c162076","name":"Extract from File"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  // Output do Code3 (dados base)\n  const c3 = ($items(\"Code\")[index] || { json: {} }).json;\n  // Output do Code4 (onde sai o c√≥digo de barras)\n  const c4 = ($items(\"Code5\")[index] || { json: {} }).json;\n\n  const out = {\n    json: {\n      // ---- do Code3 ----\n      codigo_cliente_fornecedor: c3.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: String(c3.codigo_lancamento_omie ?? ''),\n      valor: c3.valor,\n      vencimento: c3.vencimento,\n      parcela: c3.parcela,\n\n      // ---- do item atual ----\n      data: item.json.data,\n\n      // ---- do Code4 (c√≥digo de barras) ----\n      codBarras: c4.cCodBarras ?? c4.codBarras ?? item.json.cCodBarras ?? null,\n      // se quiser manter tamb√©m com o nome original:\n      cCodBarras: c4.cCodBarras ?? item.json.cCodBarras ?? null,\n    }\n  };\n\n  // preserva o bin√°rio como binary.data, se existir\n  const b = item.binary || {};\n  const chosen =\n    b.data || b.file || (Object.keys(b).length ? b[Object.keys(b)[0]] : null);\n  if (chosen) out.binary = { data: chosen };\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1328,96],"id":"4f586f8b-57e5-4bb4-9114-471f2e019ca4","name":"Code8"},{"parameters":{"mode":"combine","fieldsToMatchString":"codigo_lancamento_omie","joinMode":"enrichInput1","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1584,0],"id":"a5c77d01-83a7-49b4-b7d7-516e0b9ea889","name":"Boletos1"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Mensagens Boletos","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"columns":{"mappingMode":"defineBelow","value":{"cliente":"={{ $json.nome }}","contato":"={{ $json.telefone1 }}"},"matchingColumns":[],"schema":[{"id":"cliente","displayName":"cliente","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"contato","displayName":"contato","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"valor","displayName":"valor","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"vencimento","displayName":"vencimento","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"numero_boleto","displayName":"numero_boleto","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.7,"position":[2064,-16],"id":"2e9d87fe-4de5-40bf-88d6-871c2a045dfc","name":"Append or update row in sheet","onError":"[REDACTED]"},{"parameters":{"jsCode":"function isFeriado(date) {\n  const fixos = [\"01/01\",\"21/04\",\"01/05\",\"07/09\",\"12/10\",\"02/11\",\"15/11\",\"25/12\"];\n  const moveis = new Set([\n    // Ex.: \"2025-02-03\", \"2025-02-04\", \"2025-04-18\"\n  ]);\n  const diaMes = date.toLocaleDateString('pt-BR').substring(0, 5);\n  const iso = date.toISOString().slice(0, 10);\n  return fixos.includes(diaMes) || moveis.has(iso);\n}\n\nconst hoje = new Date();\nconst hojeBR = hoje.toLocaleDateString('pt-BR');\n\nconst data = items.flatMap(item => item.json.conta_receber_cadastro || []);\n\nconst filtrado = data.filter(item => {\n  if (!item?.data_vencimento || !item?.codigo_lancamento_omie) return false;\n\n  // ‚úÖ s√≥ passa t√≠tulos com status \"A VENCER\"\n  if (item?.status_titulo?.toUpperCase() !== \"A VENCER\") return false;\n\n  const [dia, mes, ano] = item.data_vencimento.split('/');\n  const vencimento = new Date(`${ano}-${mes}-${dia}T00:00:00`);\n\n  // 7 dias antes\n  const envio = new Date(vencimento);\n  envio.setDate(envio.getDate() - 4);\n\n  // Recuar at√© o √∫ltimo dia √∫til se cair em fds/feriado\n  while ([0, 6].includes(envio.getDay()) || isFeriado(envio)) {\n    envio.setDate(envio.getDate() - 1);\n  }\n\n  const envioBR = envio.toLocaleDateString('pt-BR');\n  return hojeBR === envioBR && (item.boleto?.cGerado?.toUpperCase() ?? 'S') === 'S';\n});\n\n// üîÅ Mapeia campos esperados pelos pr√≥ximos n√≥s\nreturn filtrado.map(item => {\n  const raw = item.valor_documento ?? item.valor ?? null;\n  let valor = null;\n  if (raw != null) {\n    valor = (typeof raw === 'number') ? raw :\n      parseFloat(String(raw).replace(/\\./g, '').replace(',', '.'));\n    if (Number.isNaN(valor)) valor = null;\n  }\n\n  return {\n    json: {\n      ...item,\n      vencimento: item.data_vencimento,\n      valor\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[16,0],"id":"b0b7638a-64fc-44c5-a32f-ede58e4f33f3","name":"FiltroVencer4dias","executeOnce":false,"alwaysOutputData":false,"retryOnFail":true}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"FiltroVencer4dias","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Boletos1","type":"main","index":0}],[{"node":"Code","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"PlanilhaNomes1":{"main":[[{"node":"Clientes1","type":"main","index":0}]]},"Clientes1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Mensagem para Evolution1","type":"main","index":0},{"node":"Append or update row in sheet","type":"main","index":0}]]},"Code":{"main":[[{"node":"ObterBoleto1","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Baixar1","type":"main","index":0}]]},"Zerando Item1":{"main":[[{"node":"PlanilhaNomes1","type":"main","index":0}]]},"ObterBoleto1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Baixar1":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Code8","type":"main","index":0}]]},"Code8":{"main":[[{"node":"Wait1","type":"main","index":0}]]},"Boletos1":{"main":[[{"node":"Merge","type":"main","index":0}]]},"FiltroVencer4dias":{"main":[[{"node":"Zerando Item1","type":"main","index":0},{"node":"Loop Over Items","type":"main","index":0}]]}}}