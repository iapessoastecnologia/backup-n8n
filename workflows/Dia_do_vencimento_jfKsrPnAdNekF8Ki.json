{"createdAt":"2025-10-13T12:36:38.877Z","id":"jfKsrPnAdNekF8Ki","name":"Dia do vencimento","active":false,"isArchived":false,"nodes":[{"parameters":{"jsCode":"function isFeriado(date) { \n  // FERIADOS FIXOS (DD/MM) ‚Äî adicione os seus\n  const fixos = [\"01/01\",\"21/04\",\"01/05\",\"07/09\",\"12/10\",\"02/11\",\"15/11\",\"25/12\"];\n\n  // FERIADOS M√ìVEIS (YYYY-MM-DD) ‚Äî preencha conforme precisar (Carnaval, P√°scoa, etc.)\n  const moveis = new Set([\n    // \"2025-02-03\", \"2025-02-04\", \"2025-04-18\",\n  ]);\n\n  const diaMes = date.toLocaleDateString('pt-BR').substring(0, 5);\n  const iso = date.toISOString().slice(0, 10);\n  return fixos.includes(diaMes) || moveis.has(iso);\n}\n\nfunction proximoDiaUtil(date) {\n  const d = new Date(date);\n  while ([0, 6].includes(d.getDay()) || isFeriado(d)) {\n    d.setDate(d.getDate() + 1);\n  }\n  return d;\n}\n\nconst up = s => (s ?? '').toString().trim().toUpperCase();\n\nconst hoje = new Date();\nconst hojeBR = hoje.toLocaleDateString('pt-BR');\n\n// Itens vindos do Omie\nconst data = items.flatMap(item => item.json.conta_receber_cadastro || []);\n\nconst filtrado = data.filter(item => {\n  if (!item?.data_vencimento || !item?.codigo_lancamento_omie) return false;\n\n  // ‚ùå n√£o deixe passar t√≠tulos RECEBIDO\n  if (up(item.status_titulo) === 'RECEBIDO') return false;\n\n  // Parse dd/mm/yyyy -> Date\n  const [dia, mes, ano] = item.data_vencimento.split('/');\n  const vencimento = new Date(`${ano}-${mes}-${dia}T00:00:00`);\n\n  // Se n√£o for dia √∫til, empurra para o pr√≥ximo dia √∫til\n  const envio = ([0,6].includes(vencimento.getDay()) || isFeriado(vencimento))\n    ? proximoDiaUtil(vencimento)\n    : vencimento;\n\n  const envioBR = envio.toLocaleDateString('pt-BR');\n\n  // Opcional: s√≥ dispara se boleto gerado\n  const boletoOk = (item.boleto?.cGerado?.toUpperCase() ?? 'S') === 'S';\n\n  // ‚úÖ somente \"vence hoje\"\n  return hojeBR === envioBR && boletoOk;\n});\n\nreturn filtrado.map(item => ({ json: item }));\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[0,0],"id":"3edf8b6e-5fcd-49ee-98ed-00a0dd9f75dc","name":"FiltroLembrete","executeOnce":false,"alwaysOutputData":false,"retryOnFail":true},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Contatos Omie","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[592,368],"id":"66af0921-80cb-4c14-a7fb-d3b5ea30b654","name":"PlanilhaNomes1"},{"parameters":{"jsCode":"// 1Ô∏è‚É£ Recebe os c√≥digos v√°lidos da etapa anterior (filtro do Omie)\nconst codigosValidos = $items(\"FiltroLembrete\", 0).map(item => item.json.codigo_cliente_fornecedor);\n\n// 2Ô∏è‚É£ Filtra os dados da planilha atual (entrada desse Function)\nreturn items.filter(item =>\n  codigosValidos.includes(item.json.codigo_cliente_omie)\n);\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1584,368],"id":"de002f1e-6d82-41a8-85b2-6c7a3b1dbe34","name":"Clientes1"},{"parameters":{"jsCode":"return [{ json: {} }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[208,368],"id":"23b5144d-2b14-4739-9d87-b4a61bb155a7","name":"Zerando Item1"},{"parameters":{"jsCode":"// Sempre for√ßa existir apenas item.binary.data\nconst desiredBinaryKey = 'data';\n\nreturn items.map((item) => {\n  const j = item.json || {};\n  const b = item.binary || {};\n\n  // ---- campos b√°sicos do seu input ----\n  const codigoCliente = j.codigo_cliente_fornecedor ?? null;\n  const codigoLanc    = j.codigo_lancamento_omie != null ? String(j.codigo_lancamento_omie) : '';\n  const vencimento    = j.vencimento || 'data n√£o informada';\n  const parcela       = j.parcela || '';\n  const codBarras     = j.cCodBarras || j.codBarras || 'c√≥digo n√£o dispon√≠vel';\n\n  // valor -> formata√ß√£o pt-BR\n  let valorNum = j.valor;\n  if (typeof valorNum === 'string') {\n    valorNum = parseFloat(valorNum.replace(/\\./g, '').replace(',', '.'));\n  }\n  const valorFmt = isNaN(valorNum) ? '0,00' : valorNum.toFixed(2).replace('.', ',');\n\n  // telefone (se existir nos dados)\n  let telefone = (j.telefone || j.telefone1 || j.telefone2 || '')\n    .toString()\n    .replace(/\\D/g, '');\n  if (telefone && !telefone.startsWith('55')) telefone = `55${telefone}`;\n  const nacional = telefone.replace(/^55/, '');\n  const telefoneValido =\n    telefone && (nacional.length === 10 || nacional.length === 11) ? telefone : '';\n\n  // caption\n  let caption =\n    `Ol√° *${j.nome || 'Cliente'}*,\\n\\n` +\n    `Seu boleto vence hoje!\\n\\n` +\n    `üí∞ *Valor:* R$ ${valorFmt}\\n` +\n    `üìÖ *Vencimento:* ${vencimento}\\n` +\n    `üìÑ *C√≥digo de Barras:* ${codBarras}\\n`;\n\n  if (j.pdf_text) caption += `\\n(Documento processado automaticamente)`;\n  caption += `\\n\\nObrigado! Qualquer d√∫vida, estamos √† disposi√ß√£o.`;\n\n  // filename\n  let filename = 'boleto.pdf';\n  const linkBoleto = j.cLinkBoleto || '';\n  const m = (linkBoleto || '').match(/([^\\/\\?]+\\.pdf)(?:\\?|$)/i);\n  if (m) filename = m[1];\n  if (b?.file?.fileName && (!m || !m[1])) filename = b.file.fileName;\n\n  // ---- BIN√ÅRIO: for√ßa apenas binary.data ----\n  const newBinary = {};\n  if (b?.file) {\n    newBinary[desiredBinaryKey] = b.file;           // vem do Extract/Download com chave 'file'\n  } else if (b && Object.keys(b).length > 0) {\n    const firstKey = Object.keys(b)[0];             // qualquer outra chave\n    newBinary[desiredBinaryKey] = b[firstKey];\n  }\n\n  // ---- JSON final (mantendo campos do input) ----\n  const out = {\n    json: {\n      codigo_cliente_fornecedor: codigoCliente,\n      codigo_lancamento_omie:    codigoLanc,\n      valor:                     j.valor,\n      vencimento:                j.vencimento,\n      parcela:                   parcela,\n\n      // extras √∫teis para o envio\n      telefone: telefoneValido,\n      caption,\n      filename,\n      url_pdf: linkBoleto || null,\n      has_pdf: !!linkBoleto || !!newBinary[desiredBinaryKey],\n\n      // mant√©m texto extra√≠do se houver\n      pdf_text: j.pdf_text || null,\n\n      // se seu item vier com \"data\" em JSON, preserva sem quebrar\n      data: j.data ?? null,\n    },\n  };\n\n  if (newBinary[desiredBinaryKey]) {\n    out.binary = newBinary;\n  }\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1936,192],"id":"d0622a3c-5d3d-43fc-9db6-fa747fb0d5e2","name":"Mensagem Lembrete"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[224,0],"id":"8289c593-905f-41fc-932f-2e4327afc6e4","name":"Loop Over Items3"},{"parameters":{},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[1392,96],"id":"1a8a153f-c839-46c9-adc6-0c99012aebe1","name":"Wait2","webhookId":"d8c60c36-6959-4acf-ab90-96589b27617f"},{"parameters":{"mode":"combine","advanced":true,"mergeByFields":{"values":[{"field1":"codigo_cliente_fornecedor","field2":"codigo_cliente_omie"}]},"joinMode":"keepEverything","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1760,192],"id":"ccea0784-fe98-4a83-b85c-1c165639ea7f","name":"Merge"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      codigo_cliente_fornecedor: item.json.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: item.json.codigo_lancamento_omie,\n      valor: item.json.valor_documento,\n      vencimento: item.json.data_vencimento,\n      parcela: item.json.parcela,\n      // ... passe tudo que precisa junto\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[416,96],"id":"30028615-7265-4db3-be38-b6f4779c04a4","name":"Code5"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  const boletoData = item.json;\n  const codigoData = $items(\"Code5\")[index].json;\n\n  // Debug para verificar estrutura\n  console.log(\"codigoData recebido:\", codigoData);\n\n  return {\n    json: {\n      codigo_cliente_fornecedor: codigoData?.codigo_cliente_fornecedor ?? null,\n      codigo_lancamento_omie: codigoData?.codigo_lancamento_omie ?? null,\n\n      // Tenta v√°rios caminhos/nomea√ß√µes para n√£o perder o dado\n      valor: codigoData?.valor\n        ?? codigoData?.Valor\n        ?? codigoData?.dados?.valor\n        ?? null,\n\n      vencimento: codigoData?.vencimento\n        ?? codigoData?.Vencimento\n        ?? codigoData?.dados?.vencimento\n        ?? null,\n\n      parcela: codigoData?.parcela\n        ?? codigoData?.Parcela\n        ?? codigoData?.dados?.parcela\n        ?? null,\n\n      // Dados do boleto\n      cLinkBoleto: boletoData?.cLinkBoleto ?? null,\n      cCodBarras: boletoData?.cCodBarras ?? null,\n      cCodStatus: boletoData?.cCodStatus ?? null,\n      cDesStatus: boletoData?.cDesStatus ?? null,\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[736,96],"id":"6df29774-def5-4484-b6bb-d4148d01430f","name":"Code6"},{"parameters":{"mode":"combine","fieldsToMatchString":"codigo_lancamento_omie","joinMode":"enrichInput1","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[1552,0],"id":"9bf23760-1612-42ba-9e27-93fda892880a","name":"Boletos1"},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"specifyBody":"json","jsonBody":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[576,96],"id":"89c19b96-b64e-456c-81ac-6dab424866fc","name":"ObterBoleto1"},{"parameters":{"url":"={{ $json.cLinkBoleto }}","options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"={{$json[\"filename\"] || \"boleto.pdf\"}}"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[912,96],"id":"752364af-8f12-4e9c-a1dc-b0c0599e49e8","name":"Baixar1"},{"parameters":{"operation":"binaryToPropery","binaryPropertyName":"boleto.pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[1072,96],"id":"db5b019f-7553-4c7e-8ebe-8804c6ef8a9b","name":"Extract from File2"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  // Output do Code3 (dados base)\n  const c5 = ($items(\"Code5\")[index] || { json: {} }).json;\n  // Output do Code4 (onde sai o c√≥digo de barras)\n  const c6 = ($items(\"Code6\")[index] || { json: {} }).json;\n\n  const out = {\n    json: {\n      // ---- do Code3 ----\n      codigo_cliente_fornecedor: c5.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: String(c5.codigo_lancamento_omie ?? ''),\n      valor: c5.valor,\n      vencimento: c5.vencimento,\n      parcela: c5.parcela,\n\n      // ---- do item atual ----\n      data: item.json.data,\n\n      // ---- do Code4 (c√≥digo de barras) ----\n      codBarras: c6.cCodBarras ?? c6.codBarras ?? item.json.cCodBarras ?? null,\n      // se quiser manter tamb√©m com o nome original:\n      cCodBarras: c6.cCodBarras ?? item.json.cCodBarras ?? null,\n    }\n  };\n\n  // preserva o bin√°rio como binary.data, se existir\n  const b = item.binary || {};\n  const chosen =\n    b.data || b.file || (Object.keys(b).length ? b[Object.keys(b)[0]] : null);\n  if (chosen) out.binary = { data: chosen };\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1232,96],"id":"675e5ae9-f60a-492c-81d8-e7a4a4bb00c2","name":"Code8"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Mensagens Boletos","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"columns":{"mappingMode":"defineBelow","value":{},"matchingColumns":[],"schema":[{"id":"cliente","displayName":"cliente","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"contato","displayName":"contato","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"valor","displayName":"valor","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"vencimento","displayName":"vencimento","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"numero_boleto","displayName":"numero_boleto","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.7,"position":[2128,192],"id":"a605f638-2510-431a-bf07-1c8504c4d543","name":"Append or update row in sheet","onError":"[REDACTED]"},{"parameters":{"inputSource":"passthrough"},"type":"[REDACTED]","typeVersion":1.1,"position":[-160,0],"id":"a4311f1b-a8bb-4cee-88fc-ec65e0fa5d03","name":"When Executed by Another Workflow"}],"connections":{"FiltroLembrete":{"main":[[{"node":"Zerando Item1","type":"main","index":0},{"node":"Loop Over Items3","type":"main","index":0}]]},"PlanilhaNomes1":{"main":[[{"node":"Clientes1","type":"main","index":0}]]},"Clientes1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Zerando Item1":{"main":[[{"node":"PlanilhaNomes1","type":"main","index":0}]]},"Mensagem Lembrete":{"main":[[{"node":"Append or update row in sheet","type":"main","index":0}]]},"Loop Over Items3":{"main":[[{"node":"Boletos1","type":"main","index":0}],[{"node":"Code5","type":"main","index":0}]]},"Wait2":{"main":[[{"node":"Loop Over Items3","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Mensagem Lembrete","type":"main","index":0}]]},"Code5":{"main":[[{"node":"ObterBoleto1","type":"main","index":0}]]},"Code6":{"main":[[{"node":"Baixar1","type":"main","index":0}]]},"Boletos1":{"main":[[{"node":"Merge","type":"main","index":0}]]},"ObterBoleto1":{"main":[[{"node":"Code6","type":"main","index":0}]]},"Baixar1":{"main":[[{"node":"Extract from File2","type":"main","index":0}]]},"Extract from File2":{"main":[[{"node":"Code8","type":"main","index":0}]]},"Code8":{"main":[[{"node":"Wait2","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"FiltroLembrete","type":"main","index":0}]]}}}