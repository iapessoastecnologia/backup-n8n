{
  "createdAt": "2025-06-05T12:17:37.362Z",
  "id": "ho9IkvnvPE8DQMJd",
  "name": "ParcelamentoV3",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "operation": "pdf",
        "binaryPropertyName": "file",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -1880,
        -200
      ],
      "id": "8f796f6b-a990-4211-b511-62cc5cfd85a2",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Code').item.json.nomeEmpresa }}{{ $('Code').item.json.ReceitaFederal }}{{ $('Code').item.json.PGFN }}",
        "hasOutputParser": true,
        "messages": {
          "messageValues": [
            {
              "type": "=SystemMessagePromptTemplate",
              "message": "=## üß† Persona   Voc√™ √© um rob√¥ altamente especializado na **extra√ß√£o de dados estruturados** a partir de arquivos JSON. Seu foco √© interpretar documentos fiscais relacionados a parcelamentos da Receita Federal e PGFN, com **precis√£o absoluta**.  ---  ## üéØ Objetivo  1. **Ler o conte√∫do do JSON** com aten√ß√£o e analisar **linha por linha** todas as informa√ß√µes fornecidas. 2. **Identificar blocos de informa√ß√£o** contendo:    - **Nome da Empresa** e **CNPJ**    - **Modalidade de parcelamento** (`Receita Federal` ou `PGFN`)    - **Lista de parcelamentos** com:      - `Tipo` (obrigat√≥rio no IRPF)      - `Conta` (obrigat√≥rio no PGFN)      - `Parcelas em Atraso` (se houver)      - `Valor em Atraso` ou `Valor Suspenso` (se houver) ---  ## üß© Cadeia de Pensamento (Etapas da Extra√ß√£o)  1. **Identifique o Nome e CNPJ da empresa:**      - Busque o nome da empresa seguido de \"CNPJ:\"      - Copie exatamente como aparece, sem resumir ou modificar.  2. **Classifique a Modalidade:**      - Se contiver ‚ÄúDiagn√≥stico Fiscal na Receita Federal‚Äù ‚Üí classifique como `IRPF`      - Se contiver ‚ÄúDiagn√≥stico Fiscal na Procuradoria-Geral da Fazenda Nacional‚Äù ‚Üí classifique como `PGFN`  3. **Identifique blocos de parcelamento:**      - Busque por ‚ÄúPend√™ncia ‚Äì Parcelamento‚Äù ou ‚ÄúParcelamento com Exigibilidade Suspensa‚Äù  4. **Identifique dados espec√≠ficos por modalidade:**      - `IRPF`: buscar a propriedade `Tipo`      - `PGFN`: buscar a propriedade `Conta`  5. **Extraia dados complementares, se presentes:**      - `Parcelas em Atraso`      - `Valor em Atraso` ou `Valor Suspenso`  6. **Contabilizando Parcelas:**      - Quando for identificar e calcular as parcelas desse arquivo, realize esse procedimento 50x, e retorne o valor que mais se repete como no exemplo abaixo:     ```     | Execu√ß√£o | Quantidade Parcelamentos IRPF | Quantidade Parcelamentos PGFN |     | -------- | ----------------------------- | ----------------------------- |     | 1        | 1                             | 2                             |     | 2        | 1                             | 2                             |     | 3        | 1                             | 2                             |     | 4        | 1                             | 2                             |     | 5        | 1                             | 5                             |     | 6        | 1                             | 5                             |     | 7        | 1                             | 2                             |     | 8        | 3                             | 2                             |     | 9        | 3                             | 2                             |     | 10       | 1                             | 2                             |      RESPOSTA: Quantidade Parcelamentos IRPF = 1 E Quantidade Parcelamentos PGFN = 2     ```     7. **Monte o JSON de resposta estruturado**, sem criar ou inferir dados.  ---  ## üóÇÔ∏è Estrutura Esperada do JSON de Sa√≠da  ```json {   \"Nome da Empresa\": \"NOME COMPLETO - CNPJ: XX.XXX.XXX/XXXX-XX\",   \"Modalidade de Parcelamento\": {     \"IRPF\": [       {         \"Tipo\": \"VALOR EXATO\",         \"Parcelas em Atraso\": N,         \"Valor em Atraso\": \"VALOR\"       }     ],     \"PGFN\": [       {         \"Conta\": \"NUMERO_EXATO\"       }     ]   },   \"QuantidadeParcelamentoIRPF\": X,   \"QuantidadeParcelamentoPGFN\": Y } ```  ---  ## üìè Regras Globais  - ‚ùå Nunca invente ou deduza dados. - ‚ùå Nunca modifique textos ou n√∫meros. - ‚úÖ Extraia apenas o que estiver presente. - ‚úÖ O JSON final deve estar **estruturalmente v√°lido e bem formatado**. - ‚úÖ Omiss√µes s√£o permitidas **somente quando o dado n√£o estiver presente no conte√∫do.** ---  ## ‚úÖ Casos de Uso com Cadeia de Pensamento  ### üîπ Caso 1 ‚Äì IRPF com Tipo  **Texto de Entrada:** ``` Parcelamento com Exigibilidade Suspensa   CNPJ: 45.244.211/0001-08   SIMPLES NACIONAL   EM PARCELAMENTO   Pend√™ncia ```  **Racioc√≠nio:**   - H√° ‚ÄúParcelamento com Exigibilidade Suspensa‚Äù   - N√£o h√° ‚ÄúConta‚Äù ‚Üí logo √© IRPF   - ‚ÄúSIMPLES NACIONAL‚Äù ‚Üí √© o tipo  **Resposta:** ```json {   \"Tipo\": \"SIMPLES NACIONAL\" } ```  ---  ### üîπ Caso 2 ‚Äì IRPF com Valor Suspenso  **Texto de Entrada:** ``` Diagn√≥stico Fiscal na Receita Federal   Parcelamento com Exigibilidade Suspensa   CNPJ: 45.244.211/0001-08   Parcelamento: 02110001200573530192516   Valor Suspenso: 1.738,01   Parcelamento Simplificado ```  **Racioc√≠nio:**   - ‚ÄúDiagn√≥stico...‚Äù indica IRPF   - ‚ÄúParcelamento Simplificado‚Äù ‚Üí Tipo   - ‚ÄúValor Suspenso‚Äù presente ‚Üí incluir  **Resposta:** ```json {   \"IRPF\": [     {       \"Tipo\": \"SIMPLIFICADO\",       \"Valor Suspenso\": \"1.738,01\"     }   ] } ```  ---  ### üîπ Caso 3 ‚Äì PGFN com Contas  **Texto de Entrada:** ``` Diagn√≥stico Fiscal na Procuradoria-Geral da Fazenda Nacional   Parcelamento com Exigibilidade Suspensa   CNPJ: 14.293.425/0001-40   Conta 012463434 TRANSACAO POR ADESAO   Conta 012463595 PARCELAMENTO CONVENCIONAL ```  **Racioc√≠nio:**   - √â PGFN (pelo diagn√≥stico)   - Duas contas presentes ‚Üí registrar ambas  **Resposta:** ```json {   \"PGFN\": [     { \"Conta\": \"012463434\" },     { \"Conta\": \"012463595\" }   ] } ``` ### üîπ Caso 3 ‚Äì Identifica√ß√£o Especial de Parcelamento  Voc√™ deve contabilizar sempre que essa sec√ß√£o do arquivo aparecer:  ``` _____________________________________ Diagn√≥stico Fiscal na Receita Federal _____________________________________ Parcelamento com Exigibilidade Suspensa (PARCSN/PARCMEI) ________________________________________________________ CNPJ: 45.244.211/0001-08 SIMPLES NACIONAL - EM PARCELAMENTO ``` Nesse caso nessa topico do IRPF, contabiliza como 1 parcelamento como no exemplo abaixo:  ``` _____________________________________ Diagn√≥stico Fiscal na Receita Federal _____________________________________ Parcelamento com Exigibilidade Suspensa (PARCSN/PARCMEI) ________________________________________________________ CNPJ: 45.244.211/0001-08 SIMPLES NACIONAL - EM PARCELAMENTO               <---- PARCELAMENTO IRPF (+1) ```  ---  ## üßæ Exemplo de Resposta Completa  ```json {   \"Nome da Empresa\": \"BIO HAZARD LTDA - CNPJ: 18.805.360/0001-26\",   \"Modalidade de Parcelamento\": {     \"IRPF\": [       {         \"Tipo\": \"SIMPLIFICADO\",         \"Parcelas em Atraso\": 3,         \"Valor em Atraso\": \"55.042,59\"       },       {         \"Tipo\": \"SIMPLIFICADO\",         \"Parcelas em Atraso\": 2,         \"Valor em Atraso\": \"1.335,28\"       }     ],     \"PGFN\": [       { \"Conta\": \"004368970\" },       { \"Conta\": \"006710266\" }     ]   },   \"QuantidadeParcelamentoIRPF\": 2,   \"QuantidadeParcelamentoPGFN\": 2 } ```  ---  ## üìå Exemplo 2 ‚Äì com Valor Suspenso  ```json {   \"Nome da Empresa\": \"GENIVALDO LIMA ESTRELA LTDA - CNPJ: 14.293.425/0001-40\",   \"Modalidade de Parcelamento\": {     \"IRPF\": [       {         \"Tipo\": \"SIMPLIFICADO\",         \"Valor Suspenso\": \"4.538,25\"       }     ],     \"PGFN\": [       { \"Conta\": \"012463434\" },       { \"Conta\": \"012463595\" }     ]   },   \"QuantidadeParcelamentoIRPF\": 1,   \"QuantidadeParcelamentoPGFN\": 2 } ```"
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -820,
        -200
      ],
      "id": "0878d56c-7040-47bf-8e2e-2ca4fc93c742",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "0db45118-3104-4e35-b3dd-08a45dfa2597",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -2100,
        -200
      ],
      "id": "7a95c657-7597-49a0-a11d-98bb98b39d1e",
      "name": "Webhook",
      "webhookId": "0db45118-3104-4e35-b3dd-08a45dfa2597"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -800,
        40
      ],
      "id": "06db96f3-2a15-42e6-93c6-2623f0a2c0cb",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "tt7ZuQiKAHQoVWEc",
          "name": "API IA PESSOAS"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n   \"Nome da Empresa\":\"JTD TRANSPORTES LTDA - CNPJ: 18.805.360/0001-26\",\n   \"Modalidade de Parcelamento\":{\n      \"Receita Federal\":[\n         {\n            \"Tipo\":\"Parcelamento Simplificado\",\n            \"parcelaAtraso\":0,\n            \"valorAtrado\":0\n         },\n         {\n            \"Tipo\":\"Parcelamento Simplificado\",\n            \"parcelaAtraso\":5,\n            \"valorAtrado\":3940.39\n         }\n      ],\n      \"PGFN\":[\n         {\n            \"Conta\":\"006710266\",\n            \"parcelaAtraso\":0,\n            \"valorAtrado\":0\n         },\n         {\n            \"Conta\":\"500310266\",\n            \"parcelaAtraso\":0,\n            \"valorAtrado\":0\n         }\n      ]\n   },\n  \"QuantidadeParcelamentoIRPF\": 2,\n  \"QuantidadeParcelamentoPGFN\": 2\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        -680,
        40
      ],
      "id": "b4d333a7-95bf-4746-b820-9e90bac0563b",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "respondWith": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        40,
        -240
      ],
      "id": "4c30f080-c726-4653-9023-4198b274993f",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "resource": "spreadsheet",
        "title": "=FISCAL {{ $now.format('yyyy-MM-dd')}}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -1040,
        -120
      ],
      "id": "c86366fa-e700-40a8-a395-ebe09f5e7d52",
      "name": "CRIAR ARQUIVAS",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ikCsPDocQe5HfNYt",
          "name": "API GOOGLE"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "5aab3eb2-4e81-479e-baeb-f6b9c0f410ce",
              "leftValue": "={{ $json.name }}",
              "rightValue": "=FISCAL {{ $now.format('yyyy-MM-dd')}}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -1260,
        -200
      ],
      "id": "09676383-8d7d-402d-8d28-59fe6fb524e0",
      "name": "EXISTE?"
    },
    {
      "parameters": {
        "resource": "fileFolder",
        "queryString": "=FISCAL {{ $now.format('yyyy-MM-dd')}}",
        "returnAll": true,
        "filter": {},
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -1480,
        -200
      ],
      "id": "992ccba8-35fc-490c-ba11-be259c15a944",
      "name": "Google Drive",
      "alwaysOutputData": true,
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "rzP1eQCZan8TdHlL",
          "name": "API IA PESSOAS"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "={{ $('Google Drive').item.json.id }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "P√°gina1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "empresa": "={{ $json.empresa }}",
            "Qtd IRF": "={{ $json['Qtd IRF'] }}",
            "Qtd PGFN": "={{ $json['Qtd PGFN'] }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "empresa",
              "displayName": "empresa",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Qtd IRF",
              "displayName": "Qtd IRF",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Qtd PGFN",
              "displayName": "Qtd PGFN",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -180,
        -180
      ],
      "id": "83e64530-b4fd-43a8-ae4c-ba85b86f9594",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ikCsPDocQe5HfNYt",
          "name": "API GOOGLE"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6149a72c-0977-4acb-a619-6dcdf3b67388",
              "name": "empresa",
              "value": "={{ $json.output['Nome da Empresa'] }}",
              "type": "string"
            },
            {
              "id": "8e3a3e19-1345-465b-9b82-89e8dedd9b69",
              "name": "Qtd IRF",
              "value": "={{ $json.output.QuantidadeParcelamentoIRPF }}",
              "type": "string"
            },
            {
              "id": "516c64e5-b37c-4326-b9a4-2ddca706cbea",
              "name": "Qtd PGFN",
              "value": "={{ $json.output.QuantidadeParcelamentoPGFN }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -460,
        -200
      ],
      "id": "d2d4e8a1-75d5-430d-a979-25f0f32a8ba6",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "jsCode": "const textoBruto = $input.first().json.text;\n\n// 1. Limpeza b√°sica\nlet textoLimpo = textoBruto\n  .replace(/\\n/g, ' ')\n  .replace(/\\s+/g, ' ')\n  .trim();\n\n// 2. Extrair nome da empresa e CNPJ\nconst empresaRegex = /CNPJ:\\s*([\\d.\\-\\/]+)\\s*-\\s*(.*?)\\s+Dados\\s+Cadastrais/i;\nconst empresaMatch = textoLimpo.match(empresaRegex);\n\nlet nomeEmpresa = 'N√ÉO ENCONTRADO';\nif (empresaMatch) {\n  nomeEmpresa = `${empresaMatch[2]} - CNPJ: ${empresaMatch[1]}`;\n}\n\n// 3. Blocos mais amplos\nconst diagnosticoRF = textoLimpo.match(/Diagn√≥stico Fiscal na Receita Federal(.*?)(Diagn√≥stico Fiscal na Procuradoria|Diagn√≥stico Fiscal na Procuradoria-Geral da Fazenda Nacional|Final do Relat√≥rio|$)/i);\nconst diagnosticoPGFN = textoLimpo.match(/Diagn√≥stico Fiscal na Procuradoria.*?Fazenda Nacional(.*?)(Final do Relat√≥rio|P√°gina:|\\s*$)/i);\n\nconst blocoIRPF = diagnosticoRF ? diagnosticoRF[1].trim() : '';\nconst blocoPGFN = diagnosticoPGFN ? diagnosticoPGFN[1].trim() : '';\n\nreturn [\n  {\n    json: {\n      nomeEmpresa,\n      ReceitaFederal: blocoIRPF,\n      PGFN: blocoPGFN\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1680,
        -380
      ],
      "id": "485cfc33-31e4-4a17-89a1-144dc3770db4",
      "name": "Code"
    }
  ],
  "connections": {
    "Extract from File": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRIAR ARQUIVAS": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "EXISTE?": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CRIAR ARQUIVAS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive": {
      "main": [
        [
          {
            "node": "EXISTE?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  }
}
