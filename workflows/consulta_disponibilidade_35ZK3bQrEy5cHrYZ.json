{"createdAt":"2025-08-06T14:32:47.564Z","id":"35ZK3bQrEy5cHrYZ","name":"consulta_disponibilidade","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"start_time"},{"name":"end_time"},{"name":"professional_id"}]}},"type":"[REDACTED]","typeVersion":1.1,"position":[-440,0],"id":"28d2e4ad-3473-4dc3-92e8-d1a048dc5771","name":"Start"},{"parameters":{"assignments":{"assignments":[{"id":"c9b6001b-0eaa-42df-969e-e08bfaa6235b","name":"aviability","value":"false","type":"string"},{"id":"9036be2e-9bfd-48fb-afac-a0a711470c73","name":"details","value":"Fora do horário de serviço","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[220,100],"id":"4f47b533-841d-4456-ad66-11c5f9ce0e98","name":"Resposta: Fora de serviço"},{"parameters":{"operation":"getAll","tableId":"Appointments","matchType":"allFilters","filters":{"conditions":[{"keyName":"[REDACTED]","condition":"lte","keyValue":"[REDACTED]"},{"keyName":"[REDACTED]","condition":"gte","keyValue":"[REDACTED]"},{"keyName":"[REDACTED]","condition":"eq","keyValue":"[REDACTED]"},{"keyName":"[REDACTED]","condition":"eq","keyValue":"[REDACTED]"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[220,-100],"id":"a83b136d-a1e0-453e-8871-709e915dd56e","name":"Verifica se tem agendamentos no horário","alwaysOutputData":true},{"parameters":{"assignments":{"assignments":[{"id":"c9b6001b-0eaa-42df-969e-e08bfaa6235b","name":"aviability","value":"false","type":"string"},{"id":"9036be2e-9bfd-48fb-afac-a0a711470c73","name":"details","value":"Já existe um agendamento","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[780,-180],"id":"da30d895-ade7-445b-a676-f9274bb29591","name":"Resposta: Existe um agendamento no horário"},{"parameters":{"assignments":{"assignments":[{"id":"c9b6001b-0eaa-42df-969e-e08bfaa6235b","name":"aviability","value":"true","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[780,100],"id":"47cf7855-8ff1-468d-b04c-2eb47a47d6ad","name":"Resposta: Disponível"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9c00d7d6-989b-4503-a8d0-95fe22d77c53","leftValue":"={{ $json.id }}","rightValue":"","operator":{"type":"number","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[440,-100],"id":"fc9dbad7-5364-4284-b028-b1fa7ecea123","name":"Tem agendamento ?"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"822109bf-32e2-497a-ae18-3a1539220f2f","leftValue":"={{ $json.isValid }}","rightValue":true,"operator":{"type":"boolean","operation":"true","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[0,0],"id":"51199be3-f9dc-4c69-b6f5-f7a4a85b71db","name":"Dentro do horário de funcionamento ?"},{"parameters":{"jsCode":"// Usa Luxon para tratar timezone corretamente\n// Observação: em n8n o DateTime da Luxon já está disponível no Code node\nconst { DateTime } = globalThis;\n\nconst entrada = $input.first().json;\n\n// Lê os ISO strings respeitando o offset embutido e normaliza para America/Sao_Paulo\nconst start = DateTime.fromISO(entrada.start_time, { setZone: true }).setZone('America/Sao_Paulo');\nconst end   = DateTime.fromISO(entrada.end_time,   { setZone: true }).setZone('America/Sao_Paulo');\n\n// Validações básicas\nif (!start.isValid || !end.isValid) {\n  return [{ json: { isValid: false, reason: 'Data/hora inválida' } }];\n}\nif (end <= start) {\n  return [{ json: { isValid: false, reason: 'Fim deve ser após o início' } }];\n}\n\n// Final de semana (6 = sábado, 7 = domingo)\nif (start.weekday === 6 || start.weekday === 7) {\n  return [{ json: { isValid: false, reason: 'Final de semana' } }];\n}\n\n// Janela de atendimento local: 08:00–18:00 no mesmo dia do início\nconst workStart = start.set({ hour: 8, minute: 0, second: 0, millisecond: 0 });\nconst workEnd   = start.set({ hour: 18, minute: 0, second: 0, millisecond: 0 });\n\n// Fora do expediente?\nif (start < workStart || end > workEnd) {\n  return [{\n    json: {\n      isValid: false,\n      reason: 'Fora do expediente',\n      detalhes: {\n        start: start.toISO(),\n        end: end.toISO(),\n        workStart: workStart.toISO(),\n        workEnd: workEnd.toISO()\n      }\n    }\n  }];\n}\n\n// Tudo certo\nreturn [{ json: { isValid: true } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-220,0],"id":"2196deb9-50cf-4586-a3f4-f8e7089a3e39","name":"Verifica horário de serviço"}],"connections":{"Start":{"main":[[{"node":"Verifica horário de serviço","type":"main","index":0}]]},"Verifica se tem agendamentos no horário":{"main":[[{"node":"Tem agendamento ?","type":"main","index":0}]]},"Tem agendamento ?":{"main":[[{"node":"Resposta: Existe um agendamento no horário","type":"main","index":0}],[{"node":"Resposta: Disponível","type":"main","index":0}]]},"Dentro do horário de funcionamento ?":{"main":[[{"node":"Verifica se tem agendamentos no horário","type":"main","index":0}],[{"node":"Resposta: Fora de serviço","type":"main","index":0}]]},"Verifica horário de serviço":{"main":[[{"node":"Dentro do horário de funcionamento ?","type":"main","index":0}]]}}}