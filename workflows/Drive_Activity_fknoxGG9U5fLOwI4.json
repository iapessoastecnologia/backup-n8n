{"createdAt":"2025-10-07T12:02:08.597Z","id":"fknoxGG9U5fLOwI4","name":"Drive Activity","active":false,"isArchived":false,"nodes":[{"parameters":{"workflowInputs":{"values":[{"name":"folder_ids","type":"any"}]}},"type":"[REDACTED]","typeVersion":1.1,"position":[0,0],"id":"9a8277f0-25ce-4441-850a-9d26cc2cbc8d","name":"When Executed by Another Workflow"},{"parameters":{"url":"https://www.googleapis.com/drive/v3/files","authentication":"[REDACTED]","sendQuery":true,"queryParameters":{"parameters":[{"name":"q","value":"={{\n  (() => {\n    // Cria uma data com o horário de hoje às 00:00:00 (início do dia)\n    const data = new Date();\n    data.setHours(0, 0, 0, 0);\n\n    // Converte para formato ISO (UTC)\n    const dataFiltro = data.toISOString();\n\n    // Retorna a query formatada para o Google Drive\n    return `'${$json[\"folder_ids\"]}' in parents and mimeType != 'application/vnd.google-apps.folder' and trashed = false and (createdTime > '${dataFiltro}' or modifiedTime > '${dataFiltro}')`;\n  })()\n}}"},{"name":"pageSize","value":"100"},{"name":"fields","value":"files(id,name,createdTime,fileExtension,modifiedByMe,appProperties,properties)"}]},"options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[704,0],"id":"bcd0fad2-de97-4b4a-be2a-db1bd50a0883","name":"HTTP Request1","retryOnFail":true},{"parameters":{"fieldToSplitOut":"folder_ids","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[256,0],"id":"21e9da2d-1979-42b9-b8d7-4e1079e77f96","name":"Split Out"},{"parameters":{"options":{}},"type":"n8n-nodes-base.removeDuplicates","typeVersion":2,"position":[464,0],"id":"5ba2f1d7-ad29-49f2-b636-c9d1e99adb07","name":"Remove Duplicates"},{"parameters":{"jsCode":"// Junta todos os arquivos de todas as pastas e ignora arrays vazios\nlet todosArquivos = [];\n\nfor (const item of $input.all()) {\n  const arquivos = item.json.files || [];\n  if (Array.isArray(arquivos) && arquivos.length > 0) {\n    todosArquivos = todosArquivos.concat(arquivos);\n  }\n}\n\n// Se houver arquivos válidos, retorna 1 item com todos eles\nif (todosArquivos.length > 0) {\n  return [\n    {\n      json: {\n        files: todosArquivos\n      }\n    }\n  ];\n}\n\n// Caso contrário, retorna um item especial para sinalizar que não há arquivos\nreturn [\n  {\n    json: {\n      info: \"Nenhum arquivo encontrado neste batch.\",\n      files: []\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[944,0],"id":"ad37d3c7-f539-4ec5-8354-aecc9a85e0e6","name":"Code in JavaScript1"},{"parameters":{"jsCode":"const items = $input.all();\n\n// Verifica se há pelo menos um item com arquivos reais\nconst temArquivos = items.some(item => item.json.files && item.json.files.length > 0);\n\n// Se houver, retorna normalmente\nif (temArquivos) {\n  return items;\n}\n\n// Caso contrário, devolve um marcador especial (não trava o loop)\nreturn [{ json: { skip: true, info: \"Nenhum arquivo encontrado neste batch.\" } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1152,0],"id":"1813fdd9-7d99-4430-842a-8ab26986a027","name":"Code in JavaScript2"}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"Split Out","type":"main","index":0}]]},"Split Out":{"main":[[{"node":"Remove Duplicates","type":"main","index":0}]]},"Remove Duplicates":{"main":[[{"node":"HTTP Request1","type":"main","index":0}]]},"HTTP Request1":{"main":[[{"node":"Code in JavaScript1","type":"main","index":0}]]},"Code in JavaScript1":{"main":[[{"node":"Code in JavaScript2","type":"main","index":0}]]}}}