{"createdAt":"2025-10-27T11:44:25.349Z","id":"BUC0SBXpcMSA7Vm1","name":"1 Dia antes do vencimento","active":false,"isArchived":false,"nodes":[{"parameters":{"inputSource":"passthrough"},"type":"[REDACTED]","typeVersion":1.1,"position":[-2384,-16],"id":"0c3ddec8-01d8-4a0a-853f-b24051c82254","name":"When Executed by Another Workflow"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1856,-16],"id":"9fdb50e8-f8aa-4c46-83e4-aed9f858d466","name":"Loop Over Items"},{"parameters":{"amount":3.5},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[-752,80],"id":"4dc2da02-95db-43f7-8734-724a55f63af7","name":"Wait1","webhookId":"d8c60c36-6959-4acf-ab90-96589b27617f"},{"parameters":{"documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Contatos Omie","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.6,"position":[-1456,336],"id":"bc2edee6-7252-4a7b-a6e4-fb86e6a8a146","name":"PlanilhaNomes1"},{"parameters":{"jsCode":"// 1Ô∏è‚É£ Recebe os c√≥digos v√°lidos da etapa anterior (filtro do Omie)\nconst codigosValidos = $items(\"FiltroVencer1dia\", 0).map(item => item.json.codigo_cliente_fornecedor);\n\n// 2Ô∏è‚É£ Filtra os dados da planilha atual (entrada desse Function)\nreturn items.filter(item =>\n  codigosValidos.includes(item.json.codigo_cliente_omie)\n);\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-624,336],"id":"6cf2cf1a-eb47-490d-a228-4579512f8663","name":"Clientes1"},{"parameters":{"mode":"combine","advanced":true,"mergeByFields":{"values":[{"field1":"codigo_cliente_fornecedor","field2":"codigo_cliente_omie"}]},"joinMode":"keepEverything","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[-400,160],"id":"81c38a5e-faa4-4420-b67c-95b658cb99d0","name":"Merge"},{"parameters":{"jsCode":"return items.map(item => {\n  return {\n    json: {\n      codigo_cliente_fornecedor: item.json.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: item.json.codigo_lancamento_omie,\n      valor: item.json.valor,\n      vencimento: item.json.vencimento,\n      parcela: item.json.parcela,\n      // ... passe tudo que precisa junto\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1680,80],"id":"30c75d33-7e2c-4ccc-b29d-24ef025415db","name":"Code"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  const boletoData = item.json;\n  const codigoData = $items(\"Code\")[index].json; // ajuste o nome do n√≥ aqui\n\n  return {\n    json: {\n      codigo_cliente_fornecedor: codigoData.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: codigoData.codigo_lancamento_omie,\n      valor: codigoData.valor,\n      vencimento: codigoData.vencimento,\n      parcela: codigoData.parcela,\n      // Dados do boleto\n      cLinkBoleto: boletoData.cLinkBoleto,\n      codBarras: boletoData.cCodBarras,\n      cCodStatus: boletoData.cCodStatus,\n      cDesStatus: boletoData.cDesStatus,\n      // outros campos do boleto, se quiser\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1360,80],"id":"618ead33-8b19-477c-80cb-1a5c68c756ee","name":"Code5"},{"parameters":{"jsCode":"return [{ json: {} }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1856,336],"id":"d96c1555-1aeb-4185-884d-2f418df0fb3e","name":"Zerando Item1"},{"parameters":{"jsCode":"// Sempre for√ßa existir apenas item.binary.data\nconst desiredBinaryKey = 'data';\n\nreturn items.map((item) => {\n  const j = item.json || {};\n  const b = item.binary || {};\n\n  // ---- campos b√°sicos do seu input ----\n  const codigoCliente = j.codigo_cliente_fornecedor ?? null;\n  const codigoLanc    = j.codigo_lancamento_omie != null ? String(j.codigo_lancamento_omie) : '';\n  const vencimento    = j.vencimento || 'data n√£o informada';\n  const parcela       = j.parcela || '';\n  const codBarras     = j.cCodBarras || j.codBarras || 'c√≥digo n√£o dispon√≠vel';\n\n  // valor -> formata√ß√£o pt-BR\n  let valorNum = j.valor;\n  if (typeof valorNum === 'string') {\n    valorNum = parseFloat(valorNum.replace(/\\./g, '').replace(',', '.'));\n  }\n  const valorFmt = isNaN(valorNum) ? '0,00' : valorNum.toFixed(2).replace('.', ',');\n\n  // telefone (se existir nos dados)\n  let telefone = (j.telefone || j.telefone1 || j.telefone2 || '')\n    .toString()\n    .replace(/\\D/g, '');\n  if (telefone && !telefone.startsWith('55')) telefone = `55${telefone}`;\n  const nacional = telefone.replace(/^55/, '');\n  const telefoneValido =\n    telefone && (nacional.length === 10 || nacional.length === 11) ? telefone : '';\n\n  // caption\n  let caption =\n    `Ol√° *${j.nome || 'Cliente'}*,\\n\\n` +\n    `Segue seu boleto para pagamento:\\n\\n` +\n    `üí∞ *Valor:* R$ ${valorFmt}\\n` +\n    `üìÖ *Vencimento:* ${vencimento}\\n` +\n    `üìÑ *C√≥digo de Barras:* ${codBarras}\\n`;\n\n  if (j.pdf_text) caption += `\\n(Documento processado automaticamente)`;\n  caption += `\\n\\nObrigado! Qualquer d√∫vida, estamos √† disposi√ß√£o.`;\n\n  // filename\n  let filename = 'boleto.pdf';\n  const linkBoleto = j.cLinkBoleto || '';\n  const m = (linkBoleto || '').match(/([^\\/\\?]+\\.pdf)(?:\\?|$)/i);\n  if (m) filename = m[1];\n  if (b?.file?.fileName && (!m || !m[1])) filename = b.file.fileName;\n\n  // ---- BIN√ÅRIO: for√ßa apenas binary.data ----\n  const newBinary = {};\n  if (b?.file) {\n    newBinary[desiredBinaryKey] = b.file;           // vem do Extract/Download com chave 'file'\n  } else if (b && Object.keys(b).length > 0) {\n    const firstKey = Object.keys(b)[0];             // qualquer outra chave\n    newBinary[desiredBinaryKey] = b[firstKey];\n  }\n\n  // ---- JSON final (mantendo campos do input) ----\n  const out = {\n    json: {\n      codigo_cliente_fornecedor: codigoCliente,\n      codigo_lancamento_omie:    codigoLanc,\n      valor:                     j.valor,\n      vencimento:                j.vencimento,\n      parcela:                   parcela,\n\n      // extras √∫teis para o envio\n      telefone: telefoneValido,\n      caption,\n      filename,\n      url_pdf: linkBoleto || null,\n      has_pdf: !!linkBoleto || !!newBinary[desiredBinaryKey],\n\n      // mant√©m texto extra√≠do se houver\n      pdf_text: j.pdf_text || null,\n\n      // se seu item vier com \"data\" em JSON, preserva sem quebrar\n      data: j.data ?? null,\n    },\n  };\n\n  if (newBinary[desiredBinaryKey]) {\n    out.binary = newBinary;\n  }\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-128,336],"id":"eb5a6a0c-5a54-4dce-9f97-ff8c673c155d","name":"Mensagem para Evolution1"},{"parameters":{"method":"POST","url":"[REDACTED]","sendBody":true,"specifyBody":"json","jsonBody":"[REDACTED]","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1520,80],"id":"d78210bc-9b3f-4fc5-90ea-18b3cca8424f","name":"ObterBoleto1"},{"parameters":{"url":"={{ $('ObterBoleto1').item.json.cLinkBoleto }}","options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"={{$json[\"filename\"] || \"boleto.pdf\"}}"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1200,80],"id":"3d6f173c-71ca-4e47-88ea-2c1bf78dd065","name":"Baixar1"},{"parameters":{"operation":"binaryToPropery","binaryPropertyName":"boleto.pdf","options":{}},"type":"n8n-nodes-base.extractFromFile","typeVersion":1,"position":[-1040,80],"id":"17a1e7fc-7fc7-4e70-ab9c-9ab4a523c608","name":"Extract from File"},{"parameters":{"jsCode":"return items.map((item, index) => {\n  // Output do Code3 (dados base)\n  const c3 = ($items(\"Code\")[index] || { json: {} }).json;\n  // Output do Code4 (onde sai o c√≥digo de barras)\n  const c4 = ($items(\"Code5\")[index] || { json: {} }).json;\n\n  const out = {\n    json: {\n      // ---- do Code3 ----\n      codigo_cliente_fornecedor: c3.codigo_cliente_fornecedor,\n      codigo_lancamento_omie: String(c3.codigo_lancamento_omie ?? ''),\n      valor: c3.valor,\n      vencimento: c3.vencimento,\n      parcela: c3.parcela,\n\n      // ---- do item atual ----\n      data: item.json.data,\n\n      // ---- do Code4 (c√≥digo de barras) ----\n      codBarras: c4.cCodBarras ?? c4.codBarras ?? item.json.cCodBarras ?? null,\n      // se quiser manter tamb√©m com o nome original:\n      cCodBarras: c4.cCodBarras ?? item.json.cCodBarras ?? null,\n    }\n  };\n\n  // preserva o bin√°rio como binary.data, se existir\n  const b = item.binary || {};\n  const chosen =\n    b.data || b.file || (Object.keys(b).length ? b[Object.keys(b)[0]] : null);\n  if (chosen) out.binary = { data: chosen };\n\n  return out;\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-880,80],"id":"d00a4385-cdac-462c-8660-3da7247d99ee","name":"Code8"},{"parameters":{"mode":"combine","fieldsToMatchString":"codigo_lancamento_omie","joinMode":"enrichInput1","options":{}},"type":"n8n-nodes-base.merge","typeVersion":3.1,"position":[-624,-16],"id":"2e601d28-e232-4dfc-8c89-4a7bae7a5736","name":"Boletos1"},{"parameters":{"operation":"appendOrUpdate","documentId":{"__rl":true,"value":"[REDACTED]","mode":"list","cachedResultName":"Mensagens Boletos","cachedResultUrl":"[REDACTED]"},"sheetName":{"__rl":true,"value":"gid=0","mode":"list","cachedResultName":"P√°gina1","cachedResultUrl":"[REDACTED]"},"columns":{"mappingMode":"defineBelow","value":{"cliente":"={{ $json.nome }}","contato":"={{ $json.telefone1 }}"},"matchingColumns":[],"schema":[{"id":"cliente","displayName":"cliente","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"contato","displayName":"contato","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"valor","displayName":"valor","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"vencimento","displayName":"vencimento","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"numero_boleto","displayName":"numero_boleto","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{}},"type":"n8n-nodes-base.googleSheets","typeVersion":4.7,"position":[-144,-32],"id":"2028b891-5e7a-4287-b72d-fabd99cfeced","name":"Append or update row in sheet","onError":"[REDACTED]"},{"parameters":{"jsCode":"function isFeriado(date) {\n  const fixos = [\"01/01\",\"21/04\",\"01/05\",\"07/09\",\"12/10\",\"02/11\",\"15/11\",\"25/12\"];\n  const moveis = new Set([\n    // Ex.: \"2025-02-03\", \"2025-02-04\", \"2025-04-18\"\n  ]);\n  const diaMes = date.toLocaleDateString('pt-BR').substring(0, 5);\n  const iso = date.toISOString().slice(0, 10);\n  return fixos.includes(diaMes) || moveis.has(iso);\n}\n\nconst hoje = new Date();\nconst hojeBR = hoje.toLocaleDateString('pt-BR');\n\nconst data = items.flatMap(item => item.json.conta_receber_cadastro || []);\n\nconst filtrado = data.filter(item => {\n  if (!item?.data_vencimento || !item?.codigo_lancamento_omie) return false;\n\n  // ‚úÖ s√≥ passa t√≠tulos com status \"A VENCER\"\n  if (item?.status_titulo?.toUpperCase() !== \"A VENCER\") return false;\n\n  const [dia, mes, ano] = item.data_vencimento.split('/');\n  const vencimento = new Date(`${ano}-${mes}-${dia}T00:00:00`);\n\n  // 7 dias antes\n  const envio = new Date(vencimento);\n  envio.setDate(envio.getDate() - 1);\n\n  // Recuar at√© o √∫ltimo dia √∫til se cair em fds/feriado\n  while ([0, 6].includes(envio.getDay()) || isFeriado(envio)) {\n    envio.setDate(envio.getDate() - 1);\n  }\n\n  const envioBR = envio.toLocaleDateString('pt-BR');\n  return hojeBR === envioBR && (item.boleto?.cGerado?.toUpperCase() ?? 'S') === 'S';\n});\n\n// üîÅ Mapeia campos esperados pelos pr√≥ximos n√≥s\nreturn filtrado.map(item => {\n  const raw = item.valor_documento ?? item.valor ?? null;\n  let valor = null;\n  if (raw != null) {\n    valor = (typeof raw === 'number') ? raw :\n      parseFloat(String(raw).replace(/\\./g, '').replace(',', '.'));\n    if (Number.isNaN(valor)) valor = null;\n  }\n\n  return {\n    json: {\n      ...item,\n      vencimento: item.data_vencimento,\n      valor\n    }\n  };\n});\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2192,-16],"id":"33b057c9-ddb9-47b1-8776-82a4adfbd7c9","name":"FiltroVencer1dia","executeOnce":false,"alwaysOutputData":false,"retryOnFail":true}],"connections":{"When Executed by Another Workflow":{"main":[[{"node":"FiltroVencer1dia","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Boletos1","type":"main","index":0}],[{"node":"Code","type":"main","index":0}]]},"Wait1":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"PlanilhaNomes1":{"main":[[{"node":"Clientes1","type":"main","index":0}]]},"Clientes1":{"main":[[{"node":"Merge","type":"main","index":1}]]},"Merge":{"main":[[{"node":"Mensagem para Evolution1","type":"main","index":0},{"node":"Append or update row in sheet","type":"main","index":0}]]},"Code":{"main":[[{"node":"ObterBoleto1","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Baixar1","type":"main","index":0}]]},"Zerando Item1":{"main":[[{"node":"PlanilhaNomes1","type":"main","index":0}]]},"ObterBoleto1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Baixar1":{"main":[[{"node":"Extract from File","type":"main","index":0}]]},"Extract from File":{"main":[[{"node":"Code8","type":"main","index":0}]]},"Code8":{"main":[[{"node":"Wait1","type":"main","index":0}]]},"Boletos1":{"main":[[{"node":"Merge","type":"main","index":0}]]},"FiltroVencer1dia":{"main":[[{"node":"Zerando Item1","type":"main","index":0},{"node":"Loop Over Items","type":"main","index":0}]]}}}